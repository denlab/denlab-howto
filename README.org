#+STARTUP: logdone
#+STARTUP: hidestars

* template

#+begin_src sh

#+end_src
* Linux
** Io
*** redirecting stdout, stderr

#+begin_src sh
# stdout to stderr
echo x >&2
# stdout and stderr to file
cmd &> file 
or on older bash : 
command > file 2>&1
# stderr to stdout
ls 2>&1
# redirect stderr on stdout and pipe
ls 2>&1 | grep '.*'
## equiv
ls |& grep '.*'
## use stdout as a file (with filename) for anothe cmd?
 ./s <(cat f)
#+end_src

** Find
*** find files modified in the last x minutes
#+begin_src sh
find . -cmin -5
#+end_src
*** handle filenames with spaces ?
#+begin_src sh
find . -maxdepth 1 -print0 | while read -d $'\0' d ; do echo $d ; done
#+end_src
http://www.cyberciti.biz/tips/handling-filenames-with-spaces-in-bash.html
** Xargs
*** run a cmd on each line of stdin with xargs?
#+begin_src sh
echo 'a
b
c' | xargs -I {} ./f {}
#+end_src

** User Admin
*** how to add a group to a user ? 
#+begin_src sh
sudo usermod -aG docker u
#+end_src
*** add a user with specific groups ? 
#+begin_src sh
adduser -G group1,group2 <user>
#+end_src

*** get the groups of a user ?
#+begin_src sh
groups <user>
#+end_src
*** change the shell of a user?
#+begin_src sh
usermod -s /bin/bash user
#+end_src
*** remove a user?
#+begin_src sh
export U=<user>
userdel -r $U
#+end_src
*** add a user?
#+begin_src sh
adduser <user>
#+end_src
** Sudo
*** allow sudo without password for a user?
#+begin_src sh
# if there's a sudo group add the user to this group
#+end_src

** Ssh
*** generate public private key pair
#+begin_src sh
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
#+end_src

*** ssh reverse tunnel ?

#+begin_src sh
# from the target machine:
ssh -R 2210:localhost:22 bserver.outside.com
#+end_src
from: https://toic.org/blog/2009/reverse-ssh-port-forwarding/

*** ssh or scp in a script without entering password ?

#+begin_src sh
expect -c "
   spawn scp login@somehost.com:/somefile .
   expect yes/no { send yes\r ; exp_continue }
   expect password: { send password\r }
   expect 100%
   exit
"
#+end_src

*** ssh without password or key? 
#+begin_src sh
# remove password for user
passwd -d user
# sshd: allow empty password
sed -r 's/#(PermitEmptyPasswords) no/\1 yes/' -i.bak /etc/ssh/sshd_config
#+end_src

*** get public key from private key ?
#+begin_src sh
ssh-keygen -y -f ~/.ssh/id_rsa
#+end_src

*** Disable host verification?
#+begin_src sh
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no peter@192.168.0.100
#+end_src
http://linuxcommando.blogspot.co.uk/2008/10/how-to-disable-ssh-host-key-checking.html
** Services mgmt
*** Linux reload service config
#+begin_src sh
sudo systemctl daemon-reload
#+end_src
** Centos
*** manage services?
#+begin_src sh
# list all services
systemctl list-unit-files --type=service

# check if a service is running
systemctl status name.service

# enable a service
#+end_src
** Terminal
*** replace capslock by ctrl in console ?
#+begin_src sh
#in  /etc/default/keyboard
#replace XKBOPTIONS="" by XKBOPTIONS="ctrl:nocaps"
# then run
run sudo dpkg-reconfigure -phigh console-setup
#+end_src

ref: https://www.emacswiki.org/emacs/MovingTheCtrlKey#toc9
*** change language keyboard mapping
#+begin_src sh
# run
dpkg-reconfigure keyboard-configuration
# or
# edit /etc/default/keyboard: 
#   change XKBLAYOUT="us,de,fr,ua,ru" by "us" for example

# for changes to take effect:
service keyboard-setup restart

# it should suffice, but if not: 
udevadm trigger --subsystem-match=input --action=change
#+end_src
https://wiki.debian.org/Keyboard
*** change text mode resolution?

** X
*** copy to system clipboard from the command line?
#+begin_src sh
echo a | xclip -selection clipboard
#+end_src
** Bash
*** Associative Arrays
**** declare, print, ...
#+begin_src sh
# declare
declare -A m=( [red]='0;31' [green]='0;32' )
# print keys
echo "keys=${!m[@]}"
# print all
declare | grep colorsCodes
#+end_src

*** ssh escape sequence?
=ENTER, ~, .=
*** c style for loop?
#+begin_src sh
for ((i=0;i<3;i++)); do
  echo $i
done
#+end_src
*** Bash Strings
**** bash strings cheat sheet?

| what        | how                                 | example |
|-------------+-------------------------------------+---------|
| size        | =${#str}=                           |         |
| substring   | =${str:pos}=                        |         |
| substring   | =${str:pos:length}=                 |         |
|             |                                     |         |
| char to int | =printf '%d\n' "'y"=                |         |
| int to char | =printf "\x$(printf %x 65)"=        |         |
| replace all | =x=abcabc; echo ${s//b/x} # axcaxc= |         |
|             |                                     |         |
*** generate random string?
#+begin_src sh
#!/bin/bash
# bash generate random alphanumeric string
#

# bash generate random 32 character alphanumeric string (upper and lowercase) and
NEW_UUID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

# bash generate random 32 character alphanumeric string (lowercase only)
cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1

# Random numbers in a range, more randomly distributed than $RANDOM which is not
# very random in terms of distribution of numbers.

# bash generate random number between 0 and 9
cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | head --bytes 1

# bash generate random number between 0 and 99
NUMBER=$(cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 2)
if [ "$NUMBER" == "" ]; then
  NUMBER=0
fi

# bash generate random number between 0 and 999
NUMBER=$(cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3)
if [ "$NUMBER" == "" ]; then
  NUMBER=0
fi
#+end_src
https://gist.github.com/earthgecko/3089509
*** decimal / hex conversion? 
#+begin_src sh
echo $((0xa))
# 10
#+end_src
*** redirect output in variable?
"must read" about the differents techniques of redirection: http://stackoverflow.com/questions/13763942/bash-why-piping-input-to-read-only-works-when-fed-into-while-read-const
* Docker
** find images on the command line ? 
???
** docker run/start/exec ?

| run   | run cmd in *new* container     |
| exec  | run cmd in *running* container |
| start | start a *stopped* container    |
** troubleshoot ubuntu network ? 
- ping 8.8.8.8 but no www.google.com ? 
- incomplete response: 
#+begin_src sh
# Find your network's DNS server:
$ nmcli dev show | grep 'IP4.DNS'
IP4.DNS[1]:                             10.19.18.25

# Open up /lib/systemd/system/docker.service and add DNS settings to the ExecStart line:
ExecStart=/usr/bin/docker daemon --dns 8.8.8.8 --dns 10.19.18.25 -H fd://
#+end_src
From: http://askubuntu.com/questions/475764/docker-io-dns-doesnt-work-its-trying-to-use-8-8-8-8
** Docker Compose
*** commands ? 
| cmd     | act on   | type      | target  | service | all | descr                                                     |
|         |          |           | state   |         |     |                                                           |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| build   | img      | build     | any     | Y       | Y   | Build or rebuild services                                 |
| create  | cont     | lifecycle | any     | Y       | Y   | Create services                                           |
| start   | cont     | lifecycle | stopped | Y       | Y   | Start services                                            |
| up      | cont     | lifecycle | stopped | Y       | Y   | Create and start containers                               |
| run     | cont     | lifecycle |         | Y       | N   | Run a one-off command                                     |
| exec    | cont     | lifecycle | running | Y       | N   | Execute a command in a running container                  |
| stop    | cont     | lifecycle | stopped | Y       | Y   | Stop services                                             |
| kill    | cont     | lifecycle | running | Y       | Y   | Kill containers                                           |
| down    | img/cont | lifecycle | running | N       | Y   | Stop and remove containers, networks, images, and volumes |
| rm      | cont     | lifecycle | stopped | Y       | Y   | Remove stopped containers                                 |
| restart | cont     | lifecycle | running | Y       | Y   | Restart services                                          |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| unpause | cont     | lifecycle | paused  | Y       | Y   | Unpause services                                          |
| pause   | cont     | lifecycle | running | Y       | Y   | Pause services                                            |
| scale   | cont     | lifecycle |         | Y       | Y   | Set number of containers for a service                    |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| config  | compose  |           |         | N       | Y   | Validate and view the compose file                        |
| bundle  | img      |           |         | ?       | ?   | Generate a Docker bundle from the Compose file            |
| pull    | img      |           |         | Y       | Y   | Pulls service images                                      |
| push    | img      |           |         | Y       | Y   | Push service images                                       |
| events  | cont     | infos     |         | Y       | Y   | Receive real time events from containers                  |
| logs    | cont     | infos     |         | Y       | Y   | View output from containers                               |
| port    | cont     | infos     |         | Y       | N   | Print the public port for a port binding                  |
| ps      | cont     | infos     |         | Y       | Y   | List containers                                           |
| help    | special  | infos     |         | N       | N   | Get help on a command                                     |
| version | special  | infos     |         | N       | N   | Show the Docker-Compose version information               |
** repair docker after a disk full ? 
#+begin_src sh
service docker stop

thin_check /var/lib/docker/devicemapper/devicemapper/metadata

thin_check --clear-needs-check-flag /var/lib/docker/devicemapper/devicemapper/metadata

service docker start

#+end_src
http://stackoverflow.com/questions/30719896/docker-dm-task-run-failed-error
* Git
** how to delete a remote branch ? 
#+begin_src sh
git push origin --delete feature/example
#+end_src
** fetch tags ? 
#+begin_src sh
git pull --tags
#+end_src
** push tags ? 
#+begin_src sh
git push origin <tag_name>
#+end_src
** delete a local/remote tag ?
#+begin_src sh
git tag -d <tagname>
git push --delete origin tagname

#+end_src

* Jq
** recursively find a value by key?
#+begin_src sh
echo '[{"a": 1}, {"b": 2}]' | jq '.. | .a? // empty'
# => 1
#+end_src
** output a array for bash?
#+begin_src sh
echo '[1,2,3]' | jq '.|@tsv'
#+end_src
** elements to array?
** find all elements recursive
#+begin_src sh
$ echo '{
  "a": {
    "b": 1,
    "c": {
      "d": {
        "key": 42
      },
      "e": 666
    }
  }
}' | jq '..| .key?//empty'

[
  42
]

#+end_src

** find all path to "key" nodes: 
#+begin_src sh
$ echo '{
  "a": {
    "b": 1,
    "c": {
      "d": {
        "key": 42
      },
      "e": 666
    }
  }
}' | jq 'path (..| .key?//empty)'

[
  "a",
  "c",
  "d",
  "key"
]

#+end_src

* Emacs 
** file type indicator header for emacs?
#+begin_src sh
-*- mode: outline -*-
#+end_src
* Sed 
** use a backreference without grouping? 
#+begin_src sh
echo bar | sed 's/.*/=> & <=/'
# => bar <=
#+end_src
** remove backslash EOL with sed? 
#+begin_src sh
echo 'a
b \
c' | sed  '
: again
/\\$/ {
    N
    s/\\\n//
    t again
}'
# a
# b c
#+end_src
* Groovy
** pipeline oriented programming in groovy like Clojure's threading macro?
#+begin_src java
Collection.metaClass.or = { Closure c -> delegate.collect c }

assert(
        [1]
      | {it + 1}
      | {it * 2}) == [4]
#+end_src

* Apt-get
** dpkg show all installed files of a .deb?

#+begin_src sh
dpkg -L jenkins
#+end_src
** apt-get: what package provide this file?

#+begin_src sh
apt-get install apt-file
apt-file update
apt-file find <file>
#+end_src
** fix a broken state ? 

#+begin_src sh
sudo apt-get install --fix-broken
#+end_src
* Rpm
** list files installed by a package?
#+begin_src sh
rpm -ql [packageName]
#+end_src

* Unicode
** Handy emoticon ? 
| thumbs up | 👍  |
|           | 👏y |
| speaker   | 🔇  |
|           | 2🔈 |
|           | 🔉  |
|           | 🔊  |
| warn      | ⚠  |
|           |    |
** draft
#+begin_src sh
┌┐
└┘
┌┐┌┐
└┘└┘
┌─┐
└─┘
┌──┐
│  │
└──┘
┌──────┐
│      │
│      │
└──────┘
╭──────╮
│      │
│      │
╰──────╯
╭─╮
╰─╯

┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌
└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘

#+end_src

* Wget
** recursively download for example nexus ?

#+begin_src sh
wget --header="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"                  \
     --header="User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0" \
     --recursive                                                                                         \
     -e robots=off                                                                                       \
     --no-parent                                                                                         \
     http://nexus-url/x/y/z
#+end_src
