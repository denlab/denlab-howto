#+STARTUP: logdone
#+STARTUP: hidestars
#+MACRO: pipe @@html:&#124;@@
#+MACRO: pipeAnd @@html:&#124;&amp;@@

* Unixes
** Linux
*** Package managers
    |        | package manager | no sudo        | install | install         | list all installed | list all                       | remove |   |
    |        |                 |                |         | version         |                    | installed                      |        |   |
    |        |                 |                |         |                 |                    | w version                      |        |   |
    |--------+-----------------+----------------+---------+-----------------+--------------------+--------------------------------+--------+---|
    | alpine | apk             |                | add     | add <pkg>=<ver> | info               | apk info <pipe> xargs apk info |        |   |
    | python | pip             | --user         | install |                 | ls                 |                                | ?      |   |
    | node   | npm             | --global       | install |                 | ls                 |                                | ?      |   |
    | perl   | cpan            | ?              | install |                 | cpan -a            |                                | ?      |   |
    | debian | aptitude        | ?              | install |                 | dpkg -l            |                                | purge  |   |
    | rhel   | yum             | ?              | install |                 | rpm -qa            |                                | ?      |   |
    | groovy | sdk             | ?              | install |                 | ?                  |                                | ?      |   |
    | ruby   | gem             | --user-install | install |                 | ?                  |                                | ?      |   |
**** find which package manager is used on this machine?
     #+BEGIN_SRC sh
     #!/usr/bin/env bash
     while read p; do $p --version &> /dev/null && echo $p ; done <<< $'yum\napt\napk'
     #+END_SRC

     #+RESULTS:

**** apk
***** equivalent of apt-file search?

*** Packages
    Top level sections as per the 'Section' attribute of =aptitude show <pkg>=.
**** Admin
***** Tmux
****** how do i detach other client when reattach to session?
       #+begin_src sh
   tmux -2 a -dt 0
       #+end_src
****** create a new session specifying the name?
       #+BEGIN_SRC sh
       # create a session named "net'
       tmux -2 new-session -s net
       #+END_SRC

****** reload .tmux.conf?
       #+BEGIN_SRC sh
       tmux source-file ~/.tmux.conf
       #+END_SRC
****** bindings to install plugins?
       #+BEGIN_SRC sh
       <prefix> + I
       #+END_SRC
       Note: After an tmux you may need to upgrade plugins too [[bindings to upgrade plugins?][see upgrading]].
****** bindings to upgrade plugins?
       - update plugins: ~<prefix> + U
       - remove plugins not on the list: =<prefix> + alt + u=
***** Zip
****** list content of a zip file from stdin? 
       #+BEGIN_SRC sh
       curl file://$(pwd)/dir.zip | bsdtar -xvf-
       #> % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
       #> Dload  Upload   Total   Spent    Left  Speed
       #> 100  1964  100  1964    0     0  43.5M      0 --:--:-- --:--:-- --:--:-- 43.5M
       #> x dir/
       #> x dir/2/
       #> x dir/2/5/
       #> x dir/2/5/data
       #+END_SRC
***** Apt-get
****** dpkg show all installed files of a .deb?

    #+begin_src sh
    dpkg -L jenkins
    #+end_src
****** apt-get: what package provide this file?

    #+begin_src sh
    apt-get install apt-file
    apt-file update
    apt-file find <file>
    #+end_src
****** fix a broken state ?

    #+begin_src sh
    sudo apt-get install --fix-broken
    #+end_src
****** install a specific version?
       #+begin_src sh
       apt-get install my-lib-java=2016.03.30-79 my-lib=2016.03.30-79
       #+end_src
****** show version that a package can be upgraded to?
       #+begin_src sh
       apt-cache policy google-chrome-stable
       #+end_src
****** customize output of dpkg -l?
       #+BEGIN_SRC sh
       dpkg-query --show --showformat='${Package}\n'
       #+END_SRC
****** Alternative
******* rebuild alternative for a particular package?
        Note: there's problably a better way :)
        But this had worked:
        #+BEGIN_SRC sh
         sudo aptitude purge openjdk-8-jdk
         sudo aptitude install openjdk-8-jdk
        #+END_SRC
***** Rpm
****** list files installed by a package?
    #+begin_src sh
    rpm -ql [packageName]
    #+end_src
****** list only names of packages?
       #+BEGIN_SRC sh
       rpm -qa --qf "%{NAME}\n"
       #+END_SRC
***** Ps
****** list all processes, show only pids?
       #+BEGIN_SRC sh
       ps ax -o pid=
       #> 3409
       #> 3413
       #> 3417
       #+END_SRC
***** SeLinux
****** status/enable/disable selinux?
       #+BEGIN_SRC sh
       # with the selinux-utils pkg:
       # for example on debian like systems:
       aptitude install selinux-utils
       # get selinux status
       getenforce
       # enable
       setenforce 1
       # disable
       setenforce 0
       #+END_SRC


**** Graphics
***** Imagemagick
****** how to change the quality of a jpeg image?
       #+BEGIN_SRC sh
       convert input.png -quality 75 output.jpg
       #+END_SRC

**** Math
***** Bc
****** float precision?
       #+begin_src sh
       echo 'scale=2 ; 1/3' | bc -l
       #+end_src

**** Net
***** Netcat
****** simple web server with netcat?
       #+BEGIN_SRC sh
       while true; do nc -l 8989 <<< "Hi! the time is now $(date)"; done
       #+END_SRC
***** Ssh
****** Ssh Tunnels
******* ssh tunnels explained
        https://unix.stackexchange.com/questions/115897/whats-ssh-port-forwarding-and-whats-the-difference-between-ssh-local-and-remot
        [[file://img/ssh-tunnels-explained.png][img]]
        [[file://img/ssh-tunnels-explained2.png][img2]]
******* ssh reverse tunnel ?

    #+begin_src sh
    # from the target machine:
    ssh -R 2210:localhost:22 bserver.outside.com
    #+end_src
    from: https://toic.org/blog/2009/reverse-ssh-port-forwarding/
******* ssh tunnel example?
        
        +BEGIN_SRC sh
        localPort=5555                              \
        remotePort=5555                             \
        sshStr=jenkins@jenkins-deploy.fircosoft.net \
          bash -c 'ssh -N  -f -L ${localPort}:localhost:${remotePort} ${sshStr}'        
        +END_SRC
        
****** Passwordless and keyless ssh login

******* ssh without password or key?
    #+begin_src sh
    # remove password for user
    passwd -d user
    # sshd: allow empty password
    sed -r 's/#(PermitEmptyPasswords) no/\1 yes/' -i.bak /etc/ssh/sshd_config
    # allow login with passwords
    sed -r                                       \
        -e 's/#(PasswordAuthentication yes)/\1/' \
        -i /etc/ssh/sshd_config                                                                          \
    #+end_src
   
******* ssh root without password or key?
       #+BEGIN_SRC sh
       passwd -d root                               \
       && sed -r                                    \
          -e 's/#(PermitEmptyPasswords) no/\1 yes/' \
          -e 's/#(PasswordAuthentication yes)/\1/'  \
          -e 's/#(PermitRootLogin).*$/\1 yes/'      \
          -i /etc/ssh/sshd_config                   \
       #+END_SRC 
       - dockerfile: 
         #+BEGIN_SRC sh
  FROM alpine
  RUN apk update && apk add openssh-server openssh-keygen
  RUN ssh-keygen -A                                                              
  CMD passwd -d root                                                                    \
      && sed -r                                                                         \
          -e 's/#(PermitEmptyPasswords) no/\1 yes/'                                     \
          -e 's/#(PasswordAuthentication yes)/\1/'                                      \
          -e 's/#(PermitRootLogin).*$/\1 yes/'                                          \
          -i /etc/ssh/sshd_config                                                       \
      && egrep 'AllowUsers|PermitRootLogin|PermitEmptyPasswords|PasswordAuthentication' \
               /etc/ssh/sshd_config                                                     \
      && /usr/sbin/sshd -D
         #+END_SRC

******* working conf for openssh 7.1 on alpine?
        #+BEGIN_SRC sh
HostKey /etc/ssh/ssh_host_rsa_key
HostKey /etc/ssh/ssh_host_ecdsa_key
HostKey /etc/ssh/ssh_host_ed25519_key
SyslogFacility AUTHPRIV
PermitRootLogin yes
AuthorizedKeysFile      .ssh/authorized_keys
PermitEmptyPasswords yes
PasswordAuthentication yes
ChallengeResponseAuthentication no
GSSAPIAuthentication yes
GSSAPICleanupCredentials no
UsePAM yes
X11Forwarding yes
UsePrivilegeSeparation sandbox          # Default for new installations.
AcceptEnv LANG LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES
AcceptEnv LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT
AcceptEnv LC_IDENTIFICATION LC_ALL LANGUAGE
AcceptEnv XMODIFIERS
Subsystem       sftp    /usr/libexec/openssh/sftp-server
        #+END_SRC

****** generate public private key pair
   #+begin_src sh
   ssh-keygen -t rsa -b 4096 -C "your_email@example.com"
   #+end_src

****** ssh or scp in a script without entering password ?

   #+begin_src sh
   expect -c "
      spawn scp login@somehost.com:/somefile .
      expect yes/no { send yes\r ; exp_continue }
      expect password: { send password\r }
      expect 100%
      exit
   "
   #+end_src

****** get public key from private key ?
   #+begin_src sh
   ssh-keygen -y -f ~/.ssh/id_rsa
   #+end_src

****** Disable host verification?
******* for one session
   #+begin_src sh
   ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no peter@192.168.0.100
   #+end_src
   http://linuxcommando.blogspot.co.uk/2008/10/how-to-disable-ssh-host-key-checking.html

******* for all sessions:
        in ~~/.ssh/config~:
        #+BEGIN_SRC sh
 Host 192.168.0.*
   StrictHostKeyChecking no
   UserKnownHostsFile=/dev/null
        #+END_SRC
******* for all sessions and all hosts:
        in ~~/.ssh/config~:
        #+BEGIN_SRC sh
 StrictHostKeyChecking no
 UserKnownHostsFile=/dev/null
        #+END_SRC

****** how to mount remote fs with sshfs?

       - mount:
       #+begin_src sh
       # usage
       sshfs USERNAME@HOSTNAME_OR_IP:/REMOTE_PATH LOCAL_MOUNT_POINT SSH_OPTIONS
       # example
       sshfs sessy@mycomputer:/remote/path /local/path -C -p 9876 -o allow_other
       #+end_src
       https://wiki.archlinux.org/index.php/SSHFS
       - umount:
         #+BEGIN_SRC sh
         fusermount -u <mount-point>
         #+END_SRC
****** copy pub key to remote authorized_keys?
       #+begin_src sh
       ssh-copy-id <user>@<host>

       #+end_src
****** workaround for a ssh slow login on a particular server?
       Use port forwarding to keep the connection open
       #+BEGIN_SRC sh
       remoteUser=user
       remoteHost=server.com
       remoteSshPort=22
       # choose a free port on the client
       localPort=5555
       # port forward the remote host ssh
       ssh -N  -f -L ${localPort}:localhost:${remoteSshPort} ${remoteUser}@${remoteHost}
       # use the local port forward
       ssh -p ${localPort} ${remoteUser}@${remoteHost}
       # close the port forwarding
       fuser -k -n tcp 5555
       #+END_SRC
***** Openssl
****** generate a self certificate for localhost?
       from: https://letsencrypt.org/docs/certificates-for-localhost/
       #+BEGIN_SRC sh
       openssl req -x509 -out localhost.crt -keyout localhost.key \
  -newkey rsa:2048 -nodes -sha256 \
  -subj '/CN=localhost' -extensions EXT -config <( \
   printf "[dn]\nCN=localhost\n[req]\ndistinguished_name = dn\n[EXT]\nsubjectAltName=DNS:localhost\nkeyUsage=digitalSignature\nextendedKeyUsage=serverAuth")
       #+END_SRC
****** generate a self certificate without interactive prompt?
       from: https://raymii.org/s/snippets/OpenSSL_generate_CSR_non-interactive.html
       +BEGIN_SRC sh
       openssl req -nodes -newkey rsa:2048 -keyout private.key -out CSR.csr -subj "/C=NL/ST=Zuid Holland/L=Rotterdam/O=Sparkling Network/OU=IT Department/CN=ssl.raymii.org"
       +END_SRC
***** Rsync
****** how to specify the port in rsync?
       #+BEGIN_SRC sh
       rsync -rvz -e 'ssh -p 2222' --progress --remove-sent-files ./dir user@host:/path
       #+END_SRC
****** how to exactly copy a local directory to a remote host (remove extra remote file if necessary) and back ? 
       #+BEGIN_SRC sh
       # local -> remote
       rsync -rvza --progress --delete workspace/ jenkins@localhost:/home/jenkins/workspace
       # remote -> local
       rsync -rvza --progress --delete jenkins@localhost:/home/jenkins/workspace/ workspace 
       
       
       #+END_SRC
**** Misc
***** VirtualBox
****** manually mount a shared folder in a linux guest?
       #+begin_src sh
       sudo mount -t vboxsf <sharedFolderName> /path/to/shared/folder/dir
       #+end_src
****** host alt-tab when in a guest?
       =host key=
       then
      alt-tab
****** Windows Hosts
******* Windows10
******** VT-x is not available (VERR_VMX_NO_VMX)
         From:

         - VT-x is not enabled in the BIOS
         - The CPU doesn't support VT-x
         - Hyper-V virtualization is enabled in Windows
         -
         - Run in command prompt:
        #+BEGIN_SRC sh
        dism.exe /Online /Disable-Feature:Microsoft-Hyper-V
        #+END_SRC
        - And reboot
       





**** Text
***** Less
****** how to search for a tab ? 
       Enter a literal tab with: =CTRL-v TAB=.
***** Tail
****** skip the N first lines of input with tail?
       #+BEGIN_SRC sh
       seq 10 | tail -n +2
       #> 2
       #> 3
       #> 4
       #> 5
       #> 6
       #> 7
       #> 8
       #> 9
       #+END_SRC
**** Utils
***** Comm
****** comm summary?
      =comm <(echo $'a\nb') <(echo $'a\nc')=

      | 1 | 2 | 3 |
      |---+---+---|
      |   |   | a |
      | b |   |   |
      |   | c |   |

      - column1: only in FILE1
      - colukn2: only in FILE2
      - column3: in FILE1 and FILE2

****** binary to compare the content of files (all in a but not in b, etc)?
       =comm=

***** Find
****** find files modified in the last x minutes
   #+begin_src sh
   find . -cmin -5
   #+end_src
****** find files modified in the last x days
   #+begin_src sh
   find . -ctime -5
   #+end_src
****** handle filenames with spaces ?
   #+begin_src sh
   find . -maxdepth 1 -print0 | while read -d $'\0' d ; do echo $d ; done
   #+end_src
   http://www.cyberciti.biz/tips/handling-filenames-with-spaces-in-bash.html
****** sort files by modified date?
       #+begin_src sh
       find -type f -printf '%T@ %p\0' |
       sort -zk 1nr |
       sed -z 's/^[^ ]* //' | tr '\0' '\n'
       #+end_src
****** find files bigger than x MBytes?
       #+BEGIN_SRC sh
       find . -size +500M -exec l {} \;
       #+END_SRC
****** find filename with regex?
       #+BEGIN_SRC sh
      find . -type f -regextype egrep -regex '.*\.(msg|txt)$$'
       #+END_SRC
****** find with logical or?
       #+BEGIN_SRC sh
      -name "*.xyz" OR ( -name "*.abc" AND -exec ... )
       #+END_SRC

***** Grep
****** cheat sheet
       |                                 | short opt | long opt               |
       |---------------------------------+-----------+------------------------|
       | print file name with match      | ~-H~      | ~--with-filename~      |
       | print only filename for matches | ~-l~      | ~--files-with-matches~ |
****** Character class for blanks? 
       #+BEGIN_SRC sh
 jq -nRr '"1: \t", "2:  "' | egrep '[[:space:]]' | jq -R .
 #> "1: \t"
 #> "2:  "
       #+END_SRC
****** match pattern on multiples lines?
       #+BEGIN_SRC sh
       seq 4  | grep -Pz '1\n2'
       #               ||   
       #               |+-------+ treat input as a set of lines  null terminated
       #               +-----------+ Perl regex mode
       #> =1= 
       #> =2=
       #>  3
       #>  4
       #+END_SRC
***** Nohup
****** run nohup?
       #+BEGIN_SRC sh
       nohup bash -c "(time bash executeScript 1 input fileOutput > scrOutput) &> timeUse.txt" &
       #+END_SRC

***** MoreUtils
****** read / process / write the same file ?
       - Use:  =sponge=
       - =sponge= will read stdin and write to specified file. Unlike a shell redirect it will soaks all its input before writing the output file.
       #+begin_src sh
       sort f | sponge f
       #+end_src
****** instead of xxx use moreutils yyy?

       | cmd       | insteadof                               | use                                                            |
       |-----------+-----------------------------------------+----------------------------------------------------------------|
       | =chronic= |                                         | =chronic backup_script.sh=                                     |
       | =sponge=  | =sort filename= \vert =uniq/ > temp=    | =sort filename= \vert =uniq \vert sponge filename=             |
       |           | =mv temp filename=                      |                                                                |
       | =isutf8=  |                                         | =isutf8 filename=                                              |
       | =ifne=    |                                         | =./script.sh= \vert =ifne less=                                |
       | =pee=     | =./script.sh= \vert =tee output1 output2= | =./script.sh= \vert =pee 'grep pattern1' 'gzip -c > output.gz'_= |
       | =ifdata=  | =<parsing ifconfig>=                    |                                                                |
       | =zrun=    | =diff <(zcat one.gz) <(zcat two.gz)=    | =zrun diff one.gz two.gz=                                      |
       | =ts=      |                                         | =$ { echo "One" ; sleep 3s ; echo "Two" ; }= \vert =ts=        |
       | =errno=   |                                         | =$ errno 98=                                                   |
       | =vipe=    |                                         | =command1= \vert =vipe= \vert =command2=                       |
       | =vidir=   |                                         | =vidir directory/=                                             |
       | =combine= | =comm -12 file1 file2=                  | =combine file1 and file2=                                      |
       |           | =comm -23 fileA fileB=                  | =combine fileA not fileB=                                      |
       |           | =sort file1 file2= \vert =uniq=         | =combine file1 or file2=                                       |
       |           | =sort file1 file2= \vert =uniq --unique= | =combine file1 xor file2=                                      |

       See: http://devblog.nestoria.com/post/110168998173/moreutils-basic-unix-tools-that-ought-to-be
***** Stat
****** Custom format with newlines?

       #+BEGIN_SRC sh
       # use --printf to insert the code sequences
       stat --printf='%U\n%G\n%C\n%z\n' /var/log/secure
       #+END_SRC
***** Tar
****** list the content of a remote tgz without intermediary files?
      #+BEGIN_SRC sh
       curl http://url/to/file.tgz | tar tzfv -
      #+END_SRC 
****** send tar compressed archive to stdout?
       #+BEGIN_SRC sh
       seq 3 > x && tar czv x > x.tgz
       #+END_SRC
***** Tree
****** print tree with unicode characters?
       #+BEGIN_SRC sh
       tree -N
       #+END_SRC
***** Xargs
****** run a cmd on each line of stdin with xargs?
   #+begin_src sh
   echo 'a
   b
   c' | xargs -I {} ./f {}
   #+end_src
****** use bash function?
       #+begin_src sh
       f() { bc; }
       echo '1 * 1
       2 * 2
       3 * 3'                                            \
       | xargs -i echo "$(declare -f f) ; echo '{}' | f" \
       | bash
       #+end_src
***** Zip
****** unzip a single file from archive?
       #+begin_src sh
       unzip -p myarchive.zip path/to/zipped/file.txt >file.txt
       #+end_src
****** compress dir recursive?
****** compress dir but exclude a directory ?
   #+begin_src sh
   zip -9 -r --exclude=*.svn*  foo.zip [directory-to-compress]
   #+end_src
   #+begin_src sh
   zip -r archive.zip /dir
   #+end_src
**** Web
***** Curl
****** follow redirects?
       #+BEGIN_SRC sh
       curl -L <url>
       #+END_SRC
****** post data from stdin?
      #+BEGIN_SRC sh
     cat data.json | curl -H "Content-Type: application/json" -X POST -d @- http://api 
      #+END_SRC 
***** Wget
****** recursively download for example nexus ?

    #+begin_src sh
    wget --header="Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8"                  \
         --header="User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:48.0) Gecko/20100101 Firefox/48.0" \
         --recursive                                                                                         \
         -e robots=off                                                                                       \
         --no-parent                                                                                         \
         http://nexus-url/x/y/z
    #+end_src
****** equivalent of curl -sS?
**** X11
***** NxClient
****** keyboard issue when connecting with nx ?
       Try:
       #+begin_src sh
       setxkbmap -model evdev -layout us
       #+end_src

*** Sysadmin
**** System Services (systemctl, ...)
***** Systemd
****** systemd / systemV cheatsheet

from: https://fedoraproject.org/wiki/SysVinit_to_Systemd_Cheatsheet

| service                            | Sysvinit Command                   | Systemd Command                                         |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| stop                               | =service ${name} stop=             | =systemctl stop        ${name}=                         |
| start                              | =service ${name} start=            | =systemctl start       ${name}=                         |
| restart                            | =service ${name} restart=          | =systemctl restart     ${name}=                         |
| reload conf                        | =service ${name} reload=           | =systemctl reload      ${name}=                         |
| restart if service already running | =service ${name} condrestart=      | =systemctl condrestart ${name}=                         |
| status                             | =service ${name} status=           | =systemctl status      ${name}=                         |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| enable                             | =chkconfig ${name} on=             | =systemctl enable     ${name}=                          |
| disable                            | =chkconfig ${name} off=            | =systemctl disable    ${name}=                          |
| isEnabled?                         | =chkconfig ${name}=                | =systemctl is-enabled ${name}=                          |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| reload when created or modififeds  | =chkconfig ${name} --add=          | =systemctl daemon-reload=                               |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| list all services                  | =ls /etc/rc.d/init.d/=             | =systemctl=                                             |
|                                    |                                    | (or) =systemctl list-unit-files --type=service=         |
|                                    |                                    | (or) =ls /{etc,lib}/systemd/system/*.service=           |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| print levels where this service    | =chkconfig ${name} --list=         | =systemctl list-unit-files --type=service=              |
| is on/off                          |                                    | (or) =ls /etc/systemd/system/*.wants/=                  |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| print graphical mode services      | =chkconfig --list \vert grep 5:on= | =systemctl list-dependencies graphical.target=          |
|------------------------------------+------------------------------------+---------------------------------------------------------|
| print what level of this service   | =chkconfig ${name} --list=         | =ls /etc/systemd/system/*.wants/${serviceName}.service= |
|------------------------------------+------------------------------------+---------------------------------------------------------|

****** follow logs of a particular systemd service?
       #+BEGIN_SRC sh
       journalctl -fu collectd
       #+END_SRC
***** General Linux
****** Linux reload service config
   #+begin_src sh
   sudo systemctl daemon-reload
   #+end_src
***** Centos
****** create a new systemd unit file?
       #+begin_src sh
       # create a new unit file
         (cat <<EOF''
   [Unit]
   Description=Post docker
   After=docker.service

   [Service]
   Type=oneshot
   ExecStart=/usr/bin/chmod 606 /var/run/docker.sock
   RemainAfterExit=true

   [Install]
   WantedBy=multi-user.target

   EOF
      ) | sudo tee /etc/systemd/system/multi-user.target.wants/docker-post.service
      # reload
      sudo systemctl daemon-reload
      # check the status
      systemctl status docker-post.service
      # enable at boot
      systemctl enable docker-post.service
       #+end_src

   #+begin_src sh
   # list all services
   systemctl list-unit-files --type=service

   # check if a service is running
   systemctl status name.service

   # enable a service
   systemctl enable docker.service

   # check if a service is enabled
   #+end_src
****** the hostname keep coming back at its previous state after each restart?
       Try setting the hostanem in ~/etc/hostname~
**** User Admin
***** how to add a group to a user ?
  #+begin_src sh
  sudo usermod -aG docker u
  #+end_src
***** add a user with specific groups ?
  #+begin_src sh
  adduser -G group1,group2 <user>
  #+end_src

***** get the groups of a user ?
  #+begin_src sh
  groups <user>
  #+end_src
***** change the shell of a user?
  #+begin_src sh
  usermod -s /bin/bash user
  #+end_src
***** remove a user?
  #+begin_src sh
  export U=<user>
  userdel -r $U
  #+end_src
***** add a user?
  #+begin_src sh
  adduser <user>
  #+end_src
***** view login activity?
      #+begin_src sh
      last
      #+end_src

**** Sudo
***** allow sudo without password for a user?
  #+begin_src sh
  # if there's a sudo group add the user to this group
  #+end_src
***** execute a cmd as another user?
  #+BEGIN_SRC sh
  sudo -u <user> /bin/ls -alrth <...>
  # WARN! path to binaries must be absolute!
  #+END_SRC
**** Devices (hdd,...)
***** eject a cd rom?
      #+begin_src sh
      ejet /dev/cdrom
      #+end_src
***** how to list all supported FS for mounting?
      #+begin_src sh
      cat /proc/filesystems
      #+end_src
***** how to fix a screwed nfs mount without rebooting?
      TODO: should be completed
      - Find the list of process open on the screwed fs:
      #+BEGIN_SRC sh
      lsof | grep '/path/to/nfs'
      #+END_SRC
      - kill them
      - remount
      ref: http://joelinoff.com/blog/?p=356
***** Swap
****** manage swap (status, enable, disable)?
       #+BEGIN_SRC sh
       # status
       swapon -s
       # alloff
       swapoff -a
       # allon
       swapon -a
       #+END_SRC
**** Dns
***** How to query all the entries of a dns server ?
      #+BEGIN_SRC sh
      set -- domain=mydomain.net
      dig +nocmd ${domain} any +multiline +noall +answer
      #+END_SRC
**** recover a lost root password at boot with grub
     - type some keys at boot to display the menu
     - edit the boot options
     - change the line
       - that contains: ... kerne ... quiet splash
       - remove quiet splash
       - add at the end: init=/bin/bash
     - boot
     - at the prompt:
       #+BEGIN_SRC sh
       mount -o remount,rw /
       mount -o remount,rw /proc
       passwd
       sync
       #+END_SRC
     - reboot
*** Terminal
**** Colors
***** simple way to color output with grep?
      #+BEGIN_SRC sh
      echo -e 'foo\nbar\nbaz'                           \
      | GREP_COLOR='01;36' egrep --color=always 'foo|$' \
      | GREP_COLOR='01;31' egrep --color=always 'baz|$'
      #> foo *colored turquoise*
      #> bar
      #> baz *colored red*
      #+END_SRC
**** Replace capslock by ctrl in console?
***** working also in virtual consoles?
 #+begin_src sh
 #in  /etc/default/keyboard
 #replace XKBOPTIONS="" by XKBOPTIONS="ctrl:nocaps"
 # then run
 run sudo dpkg-reconfigure -phigh console-setup
 #+end_src
 ref: https://www.emacswiki.org/emacs/MovingTheCtrlKey#toc9
***** working under X?
#+BEGIN_SRC sh
setxkbmap -option ctrl:nocaps
#+END_SRC
**** replace capslock by ctrl in a terminal under X ?
**** change language keyboard mapping
 #+begin_src sh
 # run
 dpkg-reconfigure keyboard-configuration
 # or
 # edit /etc/default/keyboard:
 #   change XKBLAYOUT="us,de,fr,ua,ru" by "us" for example

 # for changes to take effect:
 service keyboard-setup restart

 # it should suffice, but if not:
 udevadm trigger --subsystem-match=input --action=change
 #+end_src
 https://wiki.debian.org/Keyboard
**** change text mode resolution?
**** paste example?
 #+begin_src sh
 $ paste <(seq 1 3) <(seq 1 3)
 1       1
 2       2
 3       3
 #+end_src
**** show which key is pressed?
 #+begin_src sh

 #+end_src
**** get the number of rows and colums?
     #+begin_src sh
     tput lines
     tput cols
     #+end_src
**** Presentation conventions
***** display a command line?
      #+BEGIN_SRC sh
      `npm install -g jsonresume-theme-kendall`
      #+END_SRC
*** Io
**** Disk
***** list files open by a particular process

      #+BEGIN_SRC sh
      lsof -u jenkins | <grep/cut/jq>
      #+END_SRC
***** how to do a simple bind mount?
      
      #+BEGIN_SRC sh
      # with mount cmd:
      mount --bind /src/path /dst/path

      # with /etc/fstab: 
      /src/path /dst/path none defaults,bind 0 0
      #+END_SRC
*** Bash
**** Tests/Conditionnals
***** ternary operator in bash?
      #+BEGIN_SRC sh
      bash -c 'b=5 c=2 && d=3 && let a=b==5?c:d; echo $a'
      #+END_SRC
***** cheatsheet
      |      |          |            |                 |
      |------+----------+------------+-----------------|
      | file | is empty | =[ -s a ]= | single brackets |
      |      |          |            |                 |
***** test files cheatsheet
      from: https://wiki-dev.bash-hackers.org/commands/classictest
*For classic test =[ <..> ]=*
|---------------------+--------------------------------------------------------------------------------------|
| Operator syntax     | Description                                                                          |
|---------------------+--------------------------------------------------------------------------------------|
| -a <FILE>           | True if <FILE> exists. :!: (not recommended, may collide with -a for AND, see below) |
| -e <FILE>           | True if <FILE> exists.                                                               |
| -f <FILE>           | True, if <FILE> exists and is a regular file.                                        |
| -d <FILE>           | True, if <FILE> exists and is a directory.                                           |
| -c <FILE>           | True, if <FILE> exists and is a character special file.                              |
| -b <FILE>           | True, if <FILE> exists and is a block special file.                                  |
| -p <FILE>           | True, if <FILE> exists and is a named pipe (FIFO).                                   |
| -S <FILE>           | True, if <FILE> exists and is a socket file.                                         |
| -L <FILE>           | True, if <FILE> exists and is a symbolic link.                                       |
| -h <FILE>           | True, if <FILE> exists and is a symbolic link.                                       |
| -g <FILE>           | True, if <FILE> exists and has sgid bit set.                                         |
| -u <FILE>           | True, if <FILE> exists and has suid bit set.                                         |
| -r <FILE>           | True, if <FILE> exists and is readable.                                              |
| -w <FILE>           | True, if <FILE> exists and is writable.                                              |
| -x <FILE>           | True, if <FILE> exists and is executable.                                            |
| -s <FILE>           | True, if <FILE> exists and has size bigger than 0 (not empty).                       |
| -t <fd>             | True, if file descriptor <fd> is open and refers to a terminal.                      |
| <FILE1> -nt <FILE2> | True, if <FILE1> is newer than <FILE2> (mtime). :!:                                  |
| <FILE1> -ot <FILE2> | True, if <FILE1> is older than <FILE2> (mtime). :!:                                  |
| <FILE1> -ef <FILE2> | True, if <FILE1> and <FILE2> refer to the same device and inode numbers. :!:         |
|---------------------+--------------------------------------------------------------------------------------|
**** Looping
***** loop over cmd output with while?
      #+BEGIN_SRC sh
     iseq 3 | while read l; do echo ">$l"; done
     #> >1
     #> >2
     #> >3
      #+END_SRC
**** Bash options
***** How to get the values of errexit etc (set by set -e ...)?
      #+BEGIN_SRC sh
set -o
#> allexport       off
#> braceexpand     on
#> emacs           on
#> errexit         off
#> errtrace        off
      #+END_SRC
***** option so bash export all declared variables?
      #+BEGIN_SRC sh 
      a=1 
      bash -c 'echo "a=$a"'
      set -a
      a=1
      bash -c 'echo "a=$a"'
      #> a= 
      #> a=1 

      #+END_SRC

**** Stdin/out/err
***** redirect file to stdin on the left side?
      see: http://www.tldp.org/LDP/abs/html/io-redirection.html
      #+BEGIN_SRC sh
      < input-file command > output-file
      # non standard
      #+END_SRC
***** redirecting stdout, stderr
      #+BEGIN_SRC sh
      | redirect from | to   | cmd                            | notes          |
      |---------------+------+--------------------------------+----------------|
      | out           | err  |  ls 1>&2                       |                |
      | out & err     | file |  ls &>   file                  |                |
      |               |      |  ls >    file 2>&1             | for older bash |
      | err           | out  |  ls 2>&1                       |                |
      | err & out     | pipe |  ls 2>&1 |  grep '.*'          |                |
      |               |      |  ls      |& grep '.*'          | equiv          |
      | err           | proc |  ls 2> >(grep foo)  '          | equiv          |
      #+END_SRC
***** use stdout as a file (with filename) for another cmd?
      #+BEGIN_SRC sh
      cmd <(cat f)
      #+END_SRC
***** swap stdout and stderr?
      =cmd 3>&1 1>&2 2>&3=
     #+BEGIN_SRC sh
     $ f() { (echo out) && (echo err 1>&2); }
     $ f
  out
  err
     $ s() { sed "s/.*/=$1>&<$1=/"; }
     $ f | s 1
  err
  =1>out<1=
     $ (f 3>&1 1>&2 2>&3) | s 1
  out
  =1>err<1=
     $ ((f 3>&1 1>&2 2>&3) | s 1) | s 2
  out
  =2>=1>err<1=<2=
     $ (((f 3>&1 1>&2 2>&3) | s 1) 3>&1 1>&2 2>&3) | s 2
  =2>out<2=
  =1>err<1=
     #+END_SRC
***** write to stdin of a backround process?
      see: https://serverfault.com/questions/188936/writing-to-stdin-of-background-process
      #+BEGIN_SRC sh
      # create server
      mkfifo in
      cat > in &
      echo $! > pid
      cat in | sed 's/.*/changed> &/' &
      # use server
      echo foo > in
      # stop server
      kill -9 $(cat pid)
      #+END_SRC
***** here-string with indentation in src but not in output?
      #+BEGIN_SRC sh
      cat <<EOF''
<TAB>hi
EOF
      #> <TAB>hi
      # But:
      cat <<-EOF''
<TAB>hi
EOF
      #> hi
      #+END_SRC
***** File Descriptors
****** Named File Descriptors
******* define a named file descriptor to a writable file and write to it? 
        #+BEGIN_SRC sh
        # open 
        exec {filew}>outputfile
        # write
        echo foo >&$filew
        # check 
        cat outputfile
        #> foo
        # close
        exec {filew}>&-
        #+END_SRC
***** how to know if stdout is a terminal?
      #+BEGIN_SRC sh
      echo -n "stdout is: "
      if [ -t 1 ]; then 
        echo "a terminal"
      else
        echo "not a terminal"
      fi
      #+END_SRC
***** Printout
****** Padding
******* right / left pad with printf?
        #+BEGIN_SRC sh
        printf "%40s\n" foo | tr ' ' .
        #> .....................................foo
        printf "%-40s\n" foo | tr ' ' .
        #> foo.....................................
        #+END_SRC
******* zero padding numbers?
        #+BEGIN_SRC sh
        printf "%05d\n" 99
        #> 00099
        #+END_SRC
**** Arrays
***** Associative arrays
****** declare, print, ...
  #+begin_src sh
  # declare
  declare -A m=( [red]='0;31' [green]='0;32' )
  # print keys
  echo "keys=${!m[@]}"
  # print all
  declare | grep colorsCodes
  # iterate
  for i in "${!array[@]}"
  do
    echo "key  : $i"
    echo "value: ${array[$i]}"
  done
  #+end_src
****** copy ?
  #+begin_src sh
  declare -A arr=([this]=hello [\'that\']=world [theother]='and "goodbye"!')
  declare -A newarr
  for idx in "${!arr[@]}"; do
      newarr[$idx]=${arr[$idx]}
  done

  diff <(echo "$temp") <(declare -p newarr | sed 's/newarr=/arr=/')
  # no output
  #+end_src
  http://stackoverflow.com/questions/19417015/bash-copy-from-one-array-to-another
***** Normal arrays
****** declare/literal/set/getAll/size
      #+begin_src bash
      # declare
      declare -a a
      # literal
      a=(a b c)
      # set
      a[0]=x
      # get all
      echo ${a[*]}
      # size
      echo "size=${#a[@]}"
      #+end_src
****** access empty array?

       #+BEGIN_SRC sh
       declare -a a=()
       echo -n a=
       echo ${a[@} + "${a[@]}"}
       #+END_SRC
****** parse string to array?
       #+BEGIN_SRC sh
       IFS=', ' read -r -a array <<< "a, b, c"
       echo "array=${array[@]}"
       #> array=a b c
       #+END_SRC
****** clone an array into another array?
       #+BEGIN_SRC sh
       show() { declare | egrep "^${1}=" ; }
       # declare array a1
       declare -a a1=( a b )
       show a1
       #> a1=([0]="a" [1]="b")
       declare -a a2=("${a1[@]}")
       show a2
       #> a2=([0]="a" [1]="b")
       # verify it is a clone
       a2[0]=x
       show a2
       #> a2=([0]="x" [1]="b")
       show a1
       #> a1=([0]="a" [1]="b")
       #+END_SRC
**** ssh escape sequence?
 =ENTER, ~, .=
**** c style for loop?
 #+begin_src sh
 for ((i=0;i<3;i++)); do
   echo $i
 done
 #+end_src
**** Bash Strings
***** bash strings cheat sheet?

 | what        | how                                 | example |
 |-------------+-------------------------------------+---------|
 | size        | =${#str}=                           |         |
 | substring   | =${str:pos}=                        |         |
 | substring   | =${str:pos:length}=                 |         |
 |             |                                     |         |
 | char to int | =printf '%d\n' "'y"=                |         |
 | int to char | =printf "\x$(printf %x 65)"=        |         |
 | replace all | =x=abcabc; echo ${s//b/x} # axcaxc= |         |
 |             |                                     |         |
**** generate random string?
 #+begin_src sh
 #!/bin/bash
 # bash generate random alphanumeric string
 #

 # bash generate random 32 character alphanumeric string (upper and lowercase) and
 NEW_UUID=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1)

 # bash generate random 32 character alphanumeric string (lowercase only)
 cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1

 # Random numbers in a range, more randomly distributed than $RANDOM which is not
 # very random in terms of distribution of numbers.

 # bash generate random number between 0 and 9
 cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | head --bytes 1

 # bash generate random number between 0 and 99
 NUMBER=$(cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 2)
 if [ "$NUMBER" == "" ]; then
   NUMBER=0
 fi

 # bash generate random number between 0 and 999
 NUMBER=$(cat /dev/urandom | tr -dc '0-9' | fold -w 256 | head -n 1 | sed -e 's/^0*//' | head --bytes 3)
 if [ "$NUMBER" == "" ]; then
   NUMBER=0
 fi
 #+end_src
 https://gist.github.com/earthgecko/3089509
**** decimal / hex (and opposite) conversion?
 #+begin_src sh
# decimal to hex
echo "obase=16; 34" | bc
# hex to decimal
 echo $((0xa))
 # 10
 #+end_src
**** redirect output in variable?
 "must read" about the differents techniques of redirection: http://stackoverflow.com/questions/13763942/bash-why-piping-input-to-read-only-works-when-fed-into-while-read-const
**** stop on error (even in subshell)?
 It seems that bash disable -e in subshells.
 A workaround: set -e explicitly at the start of each subshell
**** switch case ?
     #+begin_src sh
 while [[ $# -gt 0 ]]; do
     case "$1" in
         *:*          ) hostport=(${1//:/ }); shift 1 ;;
              --child ) CHILD=1             ; shift 1 ;;
         -q | --quiet ) QUIET=1             ; shift 1 ;;
         -s | --strict) STRICT=1            ; shift 1 ;;
         --host=*     ) HOST="${1#*=}"      ; shift 1 ;;
         --help       ) usage               ; shift 1 ;;
         *            ) unknownArg "$1"     ; shift 1 ;;
     esac
 done
     #+end_src
**** loop over args?
     #+begin_src sh
     for var in "$@"
     do
       echo "$var"
     done
     #+end_src
     http://stackoverflow.com/questions/255898/how-to-iterate-over-arguments-in-a-bash-script
**** parse a string as args
     #+begin_src sh
     How to process the following list of pairs: "Mercury 36" "Venus 67" "Earth 93"  "Mars 142" "Jupiter 483"?
     (note no =IFS= set)
     #+begin_src sh
     #!/usr/bin/env bash
     set -euo pipefail

     for planet in "Mercury 36" "Venus 67"
     do
       set -- $planet
       echo "\$1=$1"
       echo "\$2=$2"
     done
     # outputs
     #
     # $1=Mercury
     # $2=36
     # $1=Venus
     # $2=67
     #+end_src
**** How to save a script params (before doing modifications like shift, ..)?
     #+begin_src sh
     # save with
     original_params=("$@")
     # use the copy with
     echo "${original_params[@]}"
     #+end_src
**** Tmp files
***** "delete while still open" trick to be sure a file will be deleted?
      from: https://unix.stackexchange.com/questions/181937/how-create-a-temporary-file-in-shell-script
      #+BEGIN_SRC sh
      tmpfile=$(mktemp /tmp/abc-script.XXXXXX)
      exec 3>"$tmpfile"
      rm "$tmpfile"
      : ...
      echo foo >&3
      #+END_SRC
**** bash pointer variables?
**** debugging
***** how to execute a script step by step?
      Add to your script:
      #+BEGIN_SRC sh
      trap 'echo TRAP ERROR something wrong happened, errcode=$? 1>&2 ; finish' ERR
      #+END_SRC
#+BEGIN_SRC sh
     declare varName=foo
     declare -n refToVar=varName
     echo ${refToVar}
     #> foo
#+END_SRC
works recursively:
#+BEGIN_SRC sh
$ declare varName=foo
$ declare -n refToVar=varName
$ declare -n refToRefToVar=refToVar
$ echo ${refToRefToVar}
#> foo
#+END_SRC
**** Env
***** How to run a command with the env cleared?
      #+BEGIN_SRC sh
      env -i bash -c env
      #>        -i, --ignore-environment
      #>        start with an empty environment

      #+END_SRC
***** export bash function?
      
     #+BEGIN_SRC sh
     f() { echo "I'm f!" ; }
     export -f f
     bash -c f
     #> I'm f!
     #+END_SRC
***** Replace all env var by values in file?
      #+BEGIN_SRC sh
      envsubst
      #+END_SRC
***** How to make bash source a file before running a command?
      Use the =BASH_ENV= to tell bash to source a file: 
     #+BEGIN_SRC sh
     touch .bashrc
     echo foo=bar >> .bashrc
     bash -c 'echo $foo'
     #> 
     BASH_ENV=.bashrc bash -c 'echo $foo'
     #> bar
    #+END_SRC 
**** generate uuid?
     #+BEGIN_SRC sh
     cat /proc/sys/kernel/random/uuid
     #> aa6bc854-9eab-43cd-986d-d2318bf4a845
     #+END_SRC
**** Complete
***** bash completion cheat sheet?
      | complete on                                                              | cmd        | options |             |               | for what?     | short form |
      |--------------------------------------------------------------------------+------------+---------+-------------+---------------+---------------+------------|
      | remove                                                                   | =complete= | =-r=    |             |               | all           |            |
      |                                                                          | =complete= | =-r=    |             | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      |--------------------------------------------------------------------------+------------+---------+-------------+---------------+---------------+------------|
      | complete on alias names                                                  | =complete= | =-A=    | =alias=     | =cmd1 … cmdN= | =cmd1 … cmdN= | =-a=       |
      |--------------------------------------------------------------------------+------------+---------+-------------+---------------+---------------+------------|
      | array variable names                                                     | =complete= | =-A=    | =arrayvar=  | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | readline key binding names                                               | =complete= | =-A=    | =binding=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | names of shell builtin commands                                          | =complete= | =-A=    | =builtin=   | =cmd1 … cmdN= | =cmd1 … cmdN= | =-b=       |
      | command names                                                            | =complete= | =-A=    | =command=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | directory names                                                          | =complete= | =-A=    | =directory= | =cmd1 … cmdN= | =cmd1 … cmdN= | =-d=       |
      | disabled shell builtins                                                  | =complete= | =-A=    | =disabled=  | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | enabled shell builtins                                                   | =complete= | =-A=    | =enabled=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | names of exported shell variables                                        | =complete= | =-A=    | =export=    | =cmd1 … cmdN= | =cmd1 … cmdN= | =-e=       |
      | file names                                                               | =complete= | =-A=    | =file=      | =cmd1 … cmdN= | =cmd1 … cmdN= | =-f=       |
      | names of shell functions                                                 | =complete= | =-A=    | =function=  | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | group names                                                              | =complete= | =-A=    | =group=     | =cmd1 … cmdN= | =cmd1 … cmdN= | =-g=       |
      | help topics accepted by the help builtin                                 | =complete= | =-A=    | =helptopic= | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | hostnames as taken from the file specifed by the HOSTFILE shell variable | =complete= | =-A=    | =hostname=  | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | job names                                                                | =complete= | =-A=    | =job=       | =cmd1 … cmdN= | =cmd1 … cmdN= | =-j=       |
      | shell reserved words                                                     | =complete= | =-A=    | =keyword=   | =cmd1 … cmdN= | =cmd1 … cmdN= | =-k=       |
      | names of running jobs                                                    | =complete= | =-A=    | =running=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | service names                                                            | =complete= | =-A=    | =service=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | valid args for the -o option of the set builtin                          | =complete= | =-A=    | =setopt=    | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | shell option names as accepted by the shopt builtin                      | =complete= | =-A=    | =shopt=     | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | signal names                                                             | =complete= | =-A=    | =signal=    | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | names of stopped jobs                                                    | =complete= | =-A=    | =stopped=   | =cmd1 … cmdN= | =cmd1 … cmdN= |            |
      | user names                                                               | =complete= | =-A=    | =user=      | =cmd1 … cmdN= | =cmd1 … cmdN= | =-u=       |
      | names of all shell variables                                             | =complete= | =-A=    | =variable=  | =cmd1 … cmdN= | =cmd1 … cmdN= | =-v=       |
**** Debugging
***** how to make a bash script stop and print current line before running it?
      Add to your script:
      #+BEGIN_SRC sh
      trap '(read -p "[$BASH_SOURCE:$LINENO] $BASH_COMMAND?")' DEBUG
      #+END_SRC
      From: https://translate.google.co.uk/translate?hl=fr&sl=en&tl=fr&u=http%3A%2F%2Fwww.softpanorama.org%2FScripting%2FShellorama%2Fbash_debugging.shtml&anno=2
**** Variables
***** how to test if a variable is defined?
      #+BEGIN_SRC sh
      if [[ ${varname:-} ]]; then
        echo "var is defined"
      else
        echo "var not defined or empt"
      fi
      #+END_SRC
**** Text
***** Printf?
****** print args, one by line with its position? 
       from: http://wiki.bash-hackers.org/commands/builtin/printf
       #+BEGIN_SRC sh
       printf '"%b"\n' "$0" "$@" | nl -v0 -s": "
       #> 0: "-zsh"
       #> 1: "foo"
       #> 2: "bar"
       #+END_SRC
****** print a line accross the terminal?
       from: http://wiki.bash-hackers.org/commands/builtin/printf
       #+BEGIN_SRC sh
       bash -c "l=$(tput cols)"' && printf -v line "%*s" $l && echo ${line// /-}' 
       #> --------------------------------------------------------------------------------
       #+END_SRC
*** Zsh
**** Completion
***** using bash's autocomplete with zsh?
      #+BEGIN_SRC sh
      touch cmd && chmod +x cmd
      # run bashcompinit
      autoload bashcompinit
      bashcompinit
      # bash's way of saying that cmd can complete with foo or bar or baz:
      complete -W 'foo bar baz' cmd
      #> ./cmd b<tab><tab> will show "foo" "bar" "baz"
      #+END_SRC
***** Copy an existing completion for another command?
      - From: https://github.com/zsh-users/zsh-completions/blob/master/zsh-completions-howto.org
      #+BEGIN_SRC sh
      compdef cmd1=cmd2
      #+END_SRC
*** X
**** copy to system clipboard from the command line?
     #+begin_src sh
 echo a | xclip -selection clipboard
     #+end_src
**** dual monitor setup: turn off one of the monitor and not the other?
     #+BEGIN_SRC sh
     # choose one of the monitor with:
     xrandr -q
     # disbale it
     xrandr --output LVDS1 --off
     #+END_SRC
**** Fonts
***** List fonts?
      #+BEGIN_SRC sh
      fc-list
      #+END_SRC
**** Gnome
***** How to logout from Gnome with the terminal?
      #+BEGIN_SRC sh
      gnome-session-quit
      #+END_SRC
**** Remote
***** NoMachine NX
****** How to administrate the NX server?
       #+BEGIN_SRC sh
       sudo /usr/NX/bin/nxserver --status
       sudo /usr/NX/bin/nxserver --stop
       sudo /usr/NX/bin/nxserver --start
       #+END_SRC
**** Xpra
*****  xpra quickstart on ubuntu?
      #+BEGIN_SRC sh
      # On the server ----------------------------------------------------------
      ## install xpra
      sudo aptitude install xpra
      ## intall xvfb
      sudo aptitude install xvfb
      ## use xvfb instead of xorg: 
      sudo vim /etc/xpra/xpra.conf
      # comment   the line starting with 'xvfb=Xorg'
      # UNcomment the line starting with 'xvfb=Xvfb'
      ## start a session on the display #10 without the deamon (for troubleshooting): 
      display=10
      xpra start --daemon=no :${display}
      # on the client ----------------------------------------------------------
      ## install xpra
      sudo aptitude install xpra
      # attach to the remote session
      display=10
      xpra attach ssh/${remoteSshUser}@${remoteSshHost}:${remoteSshPort}/${display}
      # On the server ----------------------------------------------------------
      ## start a test app: 
      DISPLAY=${display} xeyes
      #> xeyes should open on the client...
      ## now start a bigger app: 
      DISPLAY=${display} google-chrome
      #+END_SRC
**** Window managers
***** Gnome
****** open the network manager (for proxy settings) from the command line?
       #+BEGIN_SRC sh
       gnome-control-center network
       #+END_SRC
****** Gnome 3
******* Gnome Shell
******** how to have cpu,etc montoring in the top bar?
         - Install system-monitor gnome extension
         - Can search it through gnome shell search (win key)
******** how restart gnome shell?
         - =alt-F2=
         - =r=
********* Gnome Shell Extensions?
********** how to manage enabling/disabling gnome shell user extensions (command line)?
           from: https://askubuntu.com/questions/1029376/how-to-enable-and-disable-gnome-extensions-from-command-line
           #+BEGIN_SRC sh
           # are all gnome shell user extensions disabled? 
           gsettings get org.gnome.shell disable-user-extensions
           # disable all gnome shell user extensions
           gsettings set org.gnome.shell disable-user-extensions true
           #+END_SRC
          
*** Converting formats
**** convert file format table?
     | src   | dst   | command                                                                           |
     |-------+-------+-----------------------------------------------------------------------------------|
     | ~rtf~ | ~pdf~ | ~libreoffice --headless --invisible --norestore --convert-to pdf source-file.rtf~ |
**** Pdf
***** replace a string in a pdf file ?
      #+begin_src sh
   pdftk file.pdf output uncompressed.pdf uncompress

   sed -e "s/ORIGINALSTRING/NEWSTRING/g" <uncompressed.pdf >modified.pdf

   pdftk modified.pdf output recompressed.pdf compress
      #+end_src
      http://stackoverflow.com/questions/9871585/how-to-find-and-replace-text-in-a-existing-pdf-file-with-pdftk-or-other-command
*** Locale
**** fix locale config?
***** ubuntu / debian
      #+begin_src sh
 # add to /etc/environnement
 LC_ALL=en_US.UTF-8
 LANG=en_US.UTF-8

 sudo locale-gen "en_US.UTF-8"
 sudo dpkg-reconfigure locales

      #+end_src
      *note*: 
      #+BEGIN_SRC sh
      
      [warn] /etc/environment has been deprecated for locale information; use /etc/default/locale for LANG=en_US.UTF-8 instead ... (warning).
[warn] /etc/environment has been deprecated for locale information; use /etc/default/locale for LC_ALL=en_US.UTF-8 instead ... (warning).

      #+END_SRC
***** centos
      #+BEGIN_SRC sh
cat /etc/environment /etc/environment.bak
cat /etc/environment          \
| jq -R .                     \
| jq -sr '
  ["LANG=en_US.utf-10", "LC_ALL=en_US.utf-8"] as $vars
  | if contains($vars) then empty else $vars end
  | join("\n")
  | "echo \"\(.)\"
  | tee -a /etc/environment " ' \
| bash -xeuo pipefail
      #+END_SRC
*** Network
**** How to trace all network activity?
     =tcpflow=
     #+begin_src sh
     tcpflow -p -c -i eth0 port 80 | grep -oE '(GET|POST|HEAD) .* HTTP/1.[01]|Host: .*'
     #+end_src
     http://unix.stackexchange.com/questions/6279/on-the-fly-monitoring-http-requests-on-a-network-interface
**** how to get the ip adresse of the local host ?
     *Note*: To be verfied!
     #+begin_src sh
     hostname -I
     #+end_src
     or (?)
     #+begin_src sh
     hostname -I | cut -d' ' -f1
     #+end_src
**** list open ports?
     #+BEGIN_SRC sh
     netstat -lntu
     #+END_SRC
**** Proxy
***** Request with curl through a proxy over ssh ? 
      #+BEGIN_SRC sh
      remoteHost=remote.host
      remoteHostSshPort=22222
      # Create socks5 proxy on client machine
      ssh -vvv -D 8123 -f -C -N -p 55555 u@localhost
      # Request with curl telling him to use the proxy
      curl -x socks5h://localhost:8123 http://remote.host.com
      # OR
      curl --socks5-hostname localhost:8123 http://remote.host.com
      #+END_SRC
*** Compression
**** compress stdin, uncompress to stdout ?
#+BEGIN_SRC sh
     |            | cmd                       |
     |------------+---------------------------|
     | compress   | echo foobarXgzip > msg.gz |
     | decompress | zcat msg.gz               |
#+END_SRC
**** Xz
***** compress/decompress stdin with xz?
      #+BEGIN_SRC sh
      # compress
      seq 3 | xz > out.xz 
      # decompress
      cat out.xz | unxz
      #> 1
      #> 2
      #> 3
      #+END_SRC
***** decompress stdin with xz?
      #+BEGIN_SRC sh
      
      #+END_SRC
*** Fs
**** difference between =/bin=, =/usr/bin=, =/usr/local/bin=?
     From: https://unix.stackexchange.com/questions/8656/usr-bin-vs-usr-local-bin-on-linux
     - =/bin=: for booting the os (must fit on a small partition)
     - =/usr/bin=: Normal binaries installed by the package manager
     - =/usr/local/bin=: Was installed after manually compiled (for exemple)
**** Zfs
***** Create a new zfs "env" in a file?
      #+BEGIN_SRC sh
      zpool list
      fallocate -l 500M /tmp/zpooltest
      zpool create testpool /tmp/zpooltest
      zpool list
      zfs create testpool/lz4
      zfs set compression=lz4 testpool/lz4
      zfs set dedup=on testpool/lz4
      zpool list
      #> NAME           SIZE  ALLOC   FREE  EXPANDSZ   FRAG    CAP  DEDUP  HEALTH  ALTROOT
      #> testpool       480M  1,93M   478M         -    11%     0%  1.00x  ONLINE  -
      #> zpool-docker   199G   163G  36,0G         -    83%    81%  2.17x  ONLINE  -
      zfs list testpool
      #> NAME       USED  AVAIL  REFER  MOUNTPOINT
      #> testpool   652K   447M    19K  /testpool
      #+END_SRC
***** How to destroy a zpool ?
      #+BEGIN_SRC sh
      zpool destroy <poolName>
      #+END_SRC
*** Distribs
**** Alpine
***** Apk
****** use a http cache for apk ?

       from: https://hub.docker.com/r/vektorlab/apk-cache/

       - Run an apk-cache on port 80 + --add-host: 
       #+BEGIN_SRC sh
       # run an apk-cache container
       docker run -d -p 80:80 --name=apk-cache vektorlab/apk-cache
       # run container by replacing dl-4.alpinelinux.org: 
       docker run --add-host dl-cdn.alpinelinux.org:${hostIp} -it alpine:3.6
       # Alternative if not running on port 80, link the container: 
       docker run -d -p 80:80 --name=apk-cache vektorlab/apk-cache
       #+END_SRC

       - Run an apk-cache on any port + link on port 80 + --add-host: 
       #+BEGIN_SRC sh
       # run an apk-cache container
       docker run -d -p 8080:80 --name=apk-cache vektorlab/apk-cache
       # docker run with link
       docker run -ti --link apk-cache:dl-4.alpinelinux.org alpine:latest /bin/sh
       #+END_SRC

       - Run apk-cache on any port + overwrite resolution of dl-4.alpinelinux.org via dnsmasq
****** add a repo?
       #+BEGIN_SRC sh
       echo "http://107.181.185.116/alpine/v3.2/main" >> /etc/apk/repositories; \
       #+END_SRC
**** Debian
***** Old debian GPG invalid signature when apt-get update?
      Re-import expired pgp keys with:
      #+BEGIN_SRC sh
      apt-key list | grep expired |  tr -s ' '  | cut -f2 -d ' ' | cut -f2 -d'/' | sed -r 's/.*/apt-key adv --recv-keys --keyserver keys.gnupg.net &/' | bash -xv
      
      #+END_SRC
**** Ubuntu
***** Admin
****** How to authorize normal user to connect to wifi withouth authenticating as admin ?

       - Using the admin account, connect to the wifi
       - And in the wifi properties, choose: 
         - "Make available to others users"
         - 
***** 18.04
****** X
******* Normal alt-tab?
        From: https://askubuntu.com/questions/1036248/how-to-separate-opened-windows-in-alttab-switcher-in-ubuntu-18-04
        - Go to =Settings > Devices > Keyboard=.
        - Choose: "Switch windows"
        - Assign 'alt-tab' to it
*** Backup
**** Bup
***** bup essentials?
     
| category | what?                | cmd                                      |
|----------+----------------------+------------------------------------------|
| init     | init bup in curr dir | =bup init=                               |
|----------+----------------------+------------------------------------------|
| save     | local backup         | =bup index $d=                           |
|          | - of   dir : $d      | =bup save -n ${n} ${d}=                  |
|          | - with name: $n      |                                          |
|----------+----------------------+------------------------------------------|
| restore  | Restore local backup | =bup restore -C ${p} ${n}/${d}=          |
|          | - of dir    : $d     |                                          |
|          | - with name : $n     |                                          |
|          | - at path   : $p     |                                          |
|----------+----------------------+------------------------------------------|
| list     | list backup          | =bup ls $n=                              |
|          | - with name: $n      |                                          |
|----------+----------------------+------------------------------------------|
| save     | local backup         | =tar cvf $d= <pipe> =bup split -n $n -vv= |
|          | - of   dir : $d      |                                          |
|          | - with name: $n      |                                          |
|----------+----------------------+------------------------------------------|
** Solaris
*** equivalent of linux's =ps aux= ?

    maybee not exaclty equiv, but roughly:

    #+begin_src sh
    ps -AfL
    #+end_src
** AIX
*** list all processes with their corresponding commands?
    #+BEGIN_SRC sh
    ps -Af
    #+END_SRC
***** How to know the actual amount of ram used by dedup on a particular dataset ? 
      from: https://serverfault.com/questions/533877/how-large-is-my-zfs-dedupe-table-at-the-moment
      #+BEGIN_SRC sh
      sudo zpool status -D zpool-docker | jq -Rr 'capture("^\\s*dedup: DDT entries (?<ddt>[0-9]+)[^0-9]\\s+size (?<sizeOnDisk>[0-9]+) on disk, (?<inCore>[0-9]+) in core$") | map_values(fromjson) | { ramUsedForDedupInMBytes: (.ddt * .inCore / (1024 * 1024))}'
      #+END_SRC
****** common rsync flags?
       
       #+BEGIN_SRC sh
       # to copy exactly (like above) plus more feedback:
       rsync -rvza --progress --delete --info=progress2 workspace/ jenkins@localhost:/home/jenkins/workspace
       # even more verbose
       rsync -rvza --progress --delete --info=stats2,misc1,flist0 workspace/ jenkins@localhost:/home/jenkins/workspace
       #+END_SRC
****** Compress / decompress on the fly?
       +BEGIN_SRC sh
       # data ------------------------------------------------------------------
       mkdir d
       seq 2 > d/f
       # compress --------------------------------------------------------------
       tar -cf - d | xz > d.tar.xz
       # remove orig -----------------------------------------------------------
       ls
       #> d  d.tar.xz
       rm -rf d
       # uncompress ------------------------------------------------------------
       unxz < d.tar.xz| tar x
       # check -----------------------------------------------------------------
       ls
       #> d  d.tar.xz
       cat d/f
       #> 1
       #> 2
       # -----------------------------------------------------------------------
       +END_SRC
* Crypto
** Gpg
*** How to encrypt symmetric stdin without X (Inappropriate ioctl for device)?
    #+BEGIN_SRC sh
    # Workaround:
    ( export GPG_TTY=$(tty) && tar czv f | gpg --symmetric  > f.gpg )
    #+END_SRC

*** verify a gpg signed file?
    #+BEGIN_SRC sh
    gpg --verify file.gpg file
    #+END_SRC
*** how to import a gpg public key?
    #+BEGIN_SRC sh
    keyId=7C207910
    keyFingerprint='28D3 BED8 51FD F3AB 57FE F93C 2335 87A4 7C20 7910'
    gpg --keyserver keyserver.ubuntu.com --recv $keyId
    gpg --list-keys --with-fingerprint $keyId | tr -s ' ' | grep "${keyFingerprint}"
    #+END_SRC
* Non-unixes
** Ms windows
*** Vsphere
**** when cloning a win vm, how to avoid a duplicate ip adress?
     - vsphere: clone the vm :
       - but customize the hardware
       - disable the network card
     - Open the vmware console to access the machine:
       - win: setup a new ip adress
     - vsphere: enable "connect" "connect at startup"

*** Cygwin
**** Sshd
***** start sshd as a service after its installation with the Cygwin installer?
****** TODO to be verified
      1) Open a cmd.exe as administrator
      2) Run:
         #+BEGIN_SRC sh
         cygrunsrv -S sshd
         #+END_SRC
         (from: https://unix.stackexchange.com/questions/296275/running-sshd-in-cygwin-var-empty-must-be-owned-by-root
***** install gpg under cygwin?
      It's already in the standard Cygwin repo, only called =gnupg=.
*** cmd.exe
**** windows services cheatsheet?
     - list all
       #+BEGIN_SRC sh
       sc queryex type= service state= all
       #+END_SRC
    - list service containing the string "NATION"?
      #+BEGIN_SRC sh
      sc queryex type= service state= all | find /i "NATION"
      #+END_SRC

* Docker
** Images
*** find images on the command line ?
   ???
*** Building
**** docker build from stdin?
     #+BEGIN_SRC sh
     #
     # docker < 17.05
     #
     docker build -t foo -<<EOF
     FROM busybox
     RUN echo "hello world"
     EOF
     #
     # docker >= 17.05
     #
     docker build -t . -f-<<EOF
     FROM busybox
     RUN echo "hello world"
     COPY . /my-copied-files
     EOF
     #+END_SRC
*** Tags
**** Give a name to an image?
     #+BEGIN_SRC sh
     docker tag <srcImgId>   <imgName>
     docker tag 978d85d02b87 firc/foo:1
     #+END_SRC
** Containers
*** docker run/start/exec ? | run   | run cmd in *new* container     | | exec  | run cmd in *running* container | | start | start a *stopped* container    |
** troubleshoot ubuntu network ?
- ping 8.8.8.8 but no www.google.com ?
- incomplete response:
#+begin_src sh
# Find your network's DNS server:
$ nmcli dev show | grep 'IP4.DNS'
IP4.DNS[1]:                             10.19.18.25

# Open up /lib/systemd/system/docker.service and add DNS settings to the ExecStart line:
ExecStart=/usr/bin/docker daemon --dns 8.8.8.8 --dns 10.19.18.25 -H fd://
#+end_src
From: http://askubuntu.com/questions/475764/docker-io-dns-doesnt-work-its-trying-to-use-8-8-8-8
** Persistence
*** repair docker after a disk full?
 #+begin_src sh
 service docker stop

 thin_check /var/lib/docker/devicemapper/devicemapper/metadata

 thin_check --clear-needs-check-flag /var/lib/docker/devicemapper/devicemapper/metadata

 service docker start

 #+end_src
 http://stackoverflow.com/questions/30719896/docker-dm-task-run-failed-error
** Dockerfile
*** use bashism in Dockerfile?
    #+begin_src sh
 # Define bash as the default shell
 SHELL ["bash", "-c"]
 # or:
 SHELL ["bash", "-ueo","pipefail", "-c"]
     #+end_src

** Docker Compose
*** commands cheatsheet ?
| cmd     | act on   | type      | target  | service | all | descr                                                     |
|         |          |           | state   |         |     |                                                           |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| build   | img      | build     | any     | Y       | Y   | Build or rebuild services                                 |
| create  | cont     | lifecycle | any     | Y       | Y   | Create services                                           |
| start   | cont     | lifecycle | stopped | Y       | Y   | Start services                                            |
| up      | cont     | lifecycle | stopped | Y       | Y   | Create and start containers                               |
| run     | cont     | lifecycle |         | Y       | N   | Run a one-off command                                     |
| exec    | cont     | lifecycle | running | Y       | N   | Execute a command in a running container                  |
| stop    | cont     | lifecycle | stopped | Y       | Y   | Stop services                                             |
| kill    | cont     | lifecycle | running | Y       | Y   | Kill containers                                           |
| down    | img/cont | lifecycle | running | N       | Y   | Stop and remove containers, networks, images, and volumes |
| rm      | cont     | lifecycle | stopped | Y       | Y   | Remove stopped containers                                 |
| restart | cont     | lifecycle | running | Y       | Y   | Restart services                                          |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| unpause | cont     | lifecycle | paused  | Y       | Y   | Unpause services                                          |
| pause   | cont     | lifecycle | running | Y       | Y   | Pause services                                            |
| scale   | cont     | lifecycle |         | Y       | Y   | Set number of containers for a service                    |
|---------+----------+-----------+---------+---------+-----+-----------------------------------------------------------|
| config  | compose  |           |         | N       | Y   | Validate and view the compose file                        |
| bundle  | img      |           |         | ?       | ?   | Generate a Docker bundle from the Compose file            |
| pull    | img      |           |         | Y       | Y   | Pulls service images                                      |
| push    | img      |           |         | Y       | Y   | Push service images                                       |
| events  | cont     | infos     |         | Y       | Y   | Receive real time events from containers                  |
| logs    | cont     | infos     |         | Y       | Y   | View output from containers                               |
| port    | cont     | infos     |         | Y       | N   | Print the public port for a port binding                  |
| ps      | cont     | infos     |         | Y       | Y   | List containers                                           |
| help    | special  | infos     |         | N       | N   | Get help on a command                                     |
| version | special  | infos     |         | N       | N   | Show the Docker-Compose version information               |
*** pass env var at build time ?

    from: https://docs.docker.com/compose/compose-file/#cachefrom:
    #+begin_src sh
    build:
      context: .
      args:
        buildno: 1
        password: secret
    #+end_src

** docker docs

   | what                        | url                      |
   |-----------------------------+--------------------------|
   | docker install              | [[https://docs.docker.com/engine/installation/linux/ubuntu/][ubuntu]]                   |
   |                             | [[https://docs.docker.com/engine/installation/linux/centos/][centos]]                   |
   |-----------------------------+--------------------------|
   | compose install             | [[https://github.com/docker/compose/releases][any OS]]                   |
   |-----------------------------+--------------------------|
   | storage drivers in practice | [[https://docs.docker.com/engine/userguide/storagedriver/aufs-driver/][aufs in practice]]         |
   |                             | [[https://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/][devicemapper in practice]] |
   |                             | [[https://docs.docker.com/engine/userguide/storagedriver/device-mapper-driver/][overlay in practice]]      |
   |                             | [[https://docs.docker.com/engine/userguide/storagedriver/btrfs-driver/][btrfs in practice]]        |
   |                             | [[https://docs.docker.com/engine/userguide/storagedriver/zfs-driver/][zfs in practice]]          |
** Network
*** bind host /lib and /bin to the guest to run (eg) wget?
    #+begin_src sh
    # on the host
    docker run -v /usr/lib/x86_64-linux-gnu:/usr-lib-host -v /lib/x86_64-linux-gnu/:/lib-host -v /usr/bin/:/bin-host -it ubuntu:16.04 bash
    # on the guest
    export LD_LIBRARY_PATH=/lib-host:/usr-lib-host && export PATH=$PATH:/bin-host
    wget google.com
    #+end_src
** DockerHub
*** How to list all tags of a particular image?
    #+BEGIN_SRC sh
    img=jenkins
    curl "https://registry.hub.docker.com/v1/repositories/${img}/tags"  | jq -c '.[]'
    #> {"layer":"","name":"2.7.3-alpine"}
    #> {"layer":"","name":"2.7.4"}
    #> {"layer":"","name":"2.7.4-alpine"}
    #+END_SRC
** Misc
*** use stdin with a container?
    #+BEGIN_SRC sh
   seq 100 | docker run -i syn synesthesia 1
    #+END_SRC
* Emacs
** file type indicator header for emacs?
#+begin_src sh
-*- mode: outline -*-
#+end_src
** edit a file remotely over ssh with tramp?
   #+begin_src sh
   C-x C-f
   /<user>@<host>:<file>
   #+end_src

** Spacemacs
*** evil cheat sheet?

| what                                               |                       | cmds                  | example                  |
|----------------------------------------------------+-----------------------+-----------------------+--------------------------|
| general cmd                                        | pattern 1             | <cmd> [n] <object>    | =d 3 3= # delete 3 words |
| "                                                  | pattern 2             | [n] <cmd> <object>    | =3 d w= # delete 3 words |
| undo / redo                                        |                       | u / ctrl-r            |                          |
| put (after copy)                                   |                       | p                     |                          |
| change word                                        |                       | cw                    |                          |
| go to a specific line number                       |                       | :<lineNb>             |                          |
| search and replace                                 | current line          | :s/search/repl/[g]    |                          |
| "                                                  | between lines N and M | :N,Ms/search/repl/[g] |                          |
| "                                                  | whole buffer          | %s/search/repl/[g]    |                          |
| locate matching parentesis (or curly, ...)         |                       | %                     |                          |
| regex modifier to confirm before each replace?     |                       | c: s/search/repl/gc   |                          |
| write current file                                 |                       | :w                    |                          |
| save as <newName>                                  |                       | :w <newName>          |                          |
| page up / page down                                |                       | C-j C-k               |                          |
| insert the content of a file in the current buffer |                       | :r <filename>         |                          |
| insert new line                                    | below                 | o                     |                          |
|                                                    | above                 | O                     |                          |
| replace (like replace mode - opposite of insert)   |                       | R                     |                          |
| append at the end of the line                      |                       | A                     |                          |
*** run a command and get the output in the current buffer?
**** Emacs
    ~C-u M-! <shell-command>~
**** Spacemacs (evil mode)
     ~SPC u SPC ! <shell-command>~
*** Universal argument in spacemacs (evil mode)?
    instead of the traditional ~C-u~
    ~SPC u~
*** Project
**** search and replace in project?
     |                          |                      |             |
     |--------------------------+----------------------+-------------|
     | search string in project | ~helm-project-do-ag~ | ~SPC s a p~ |
     | edit the search results  |                      | ~C-c C-e~   |
     | commit the changes       |                      | ~C-c C-c~   |
*** SearchAndReplace
**** How to search and replace starting at the cursor position?
     #+BEGIN_SRC sh
     :.,$s/\vBEFORE/AFTER/gc
     #+END_SRC
*** Folding
**** a promising mode? 
     - hint: =spacemacs/fold-transient-state/evil-close-fold=
** OrgMode
*** Tables
**** pipe in table cells?
***** pipe in table with code block
      - create the table in org mode
      | x    | l               |
      |------+-----------------|
      | cmd1 | cmd             |
      | cmd2 | cmd <pipe> cmdx |
      - copy and pase the table in a code block and add the missing pipes:
        #+BEGIN_SRC sh
      | x    | l               |
      |------+-----------------|
      | cmd1 | cmd             |
      | cmd2 | cmd | cmdx      |
        #+END_SRC
***** TODO org mode how to use pipes in tables? [0%]
****** TODO using contants?
      #+CONSTANTS: c=299792458. pi=3.14 eps=2.4e-6
      | name | value |
      |------+-------|
      | c    | $c    |
      | pi   | $pi   |
      | eps  | $eps  |
****** TODO macros?
****** TODO latex?
****** TODO html?
****** TODO compute cells values ?
*** twbs export html
    Controlling html output?
  #+BEGIN_SRC sh
    #+OPTIONS: num:5 whn:2 toc:4 H:6
    And to set these via your publish configuration using the org-publish-project-alist, the options would be :section-numbers, :headline-levels and :with-toc.

    The above options are described in the export settings section of the orgmode manual. This component introduces a new setting whn for per document, and :with-headline-numbers for publish config, which controls the display of section numbers. To disable, set to nil, to enable, set to t, and to control depth of display, use a whole number.
  #+END_SRC
    from: https://github.com/marsmining/ox-twbs
*** easy templates?

from: http://orgmode.org/manual/Easy-Templates.html#Easy-Templates

| s  |  =#+BEGIN_SRC ... #+END_SRC=      |
| e  | =#+BEGIN_EXAMPLE ... #+END_EXAMPLE= |
| q  | =#+BEGIN_QUOTE ... #+END_QUOTE=   |
| v  | =#+BEGIN_VERSE ... #+END_VERSE=   |
| c  | =#+BEGIN_CENTER ... #+END_CENTER= |
| l  | =#+BEGIN_LaTeX ... #+END_LaTeX=   |
| L  | =#+LaTeX:=                        |
| h  | =#+BEGIN_HTML ... #+END_HTML=     |
| H  | =#+HTML:=                         |
| a  | =#+BEGIN_ASCII ... #+END_ASCII=   |
| A  | =#+ASCII:=                        |
| i  | =#+INDEX: line=                   |
| I  | =#+INCLUDE: line=                 |
*** Babel
**** "eval is disabled for shell"
***** add to your init file
       *use =shell= and not =sh=*
       #+BEGIN_SRC elisp
       (org-babel-do-load-languages
       'org-babel-load-languages
       '(
       (js         . t)
       ;; (sh         . t)
       (emacs-lisp . t)
       (shell      . t)
       (clojure    . t)
     ))
       #+END_SRC
***** in the org mode file
     #+BEGIN_EXAMPLE
     #+BEGIN_SRC sh
     f() { echo "I'm f!" ; }
     export -f f
     bash -c f
     #+END_SRC
     #+END_EXAMPLE
***** stop emacs
***** remove the folder =~/.emacs.d/elpa/org-plus-contrib-*=
***** start emacs
***** try to eval with =C-c C-c=
** install emacs25 on ubuntu16.04?
   #+BEGIN_SRC sh
cd
mkdir emacs25.install
cd emacs25.install
# install preReqs
sudo apt install build-essential checkinstall
# install build deps (same for emacs24 or 25)
sudo apt-get build-dep emacs24
# Download emacs25 src
wget http://ftp.igh.cnrs.fr/pub/gnu/emacs/emacs-25.1.tar.{xz,xz.sig}
keyId=7C207910
keyFingerprint='28D3 BED8 51FD F3AB 57FE F93C 2335 87A4 7C20 7910'
gpg --keyserver keyserver.ubuntu.com --recv "${keyId}"
gpg --list-keys --with-fingerprint "${keyId}" | tr -s ' ' | grep "${keyFingerprint}"
# build
cd emacs-25.1
./configure
make
# install
sudo checkinstall
   #+END_SRC
* Programming
** JVM ecosystem
*** Groovy
**** pipeline oriented programming in groovy like Clojure's threading macro?
  #+begin_src java
  Collection.metaClass.or = { Closure c -> delegate.collect c }

  assert(
          [1]
        | {it + 1}
        | {it * 2}) == [4]
  #+end_src
**** groovy switch case?
     #+begin_src java
     switch(val) {
       case ~/ab.*/:
         result="x"
         break
       case ...
       default:
         ...
         break
     }
     #+end_src
**** groovy interval ?
     #+begin_src java
     (1..10).each{prinltn it}
     #+end_src
**** get cmd line args?
     #+begin_src sh
     println(args)
     #+end_src
**** run a system command in groovy ?
     see: http://docs.groovy-lang.org/latest/html/documentation/working-with-io.html
     #+BEGIN_SRC sh
def process = "ls -l".execute()
println "Found text ${process.text}"
     #+END_SRC

     #+BEGIN_SRC sh
def process = "ls -l".execute()
process.in.eachLine { line ->
    println line
}
     #+END_SRC

     #+BEGIN_SRC sh
    def p = "rm -f foo.tmp".execute([], tmpDir)
p.consumeProcessOutput()
p.waitFor()
     #+END_SRC
*** Java
**** Create an object with the same behavior than System.out (for testing output)?
     #+begin_src java
     ByteArrayOutputStream os = new ByteArrayOutputStream();
     PrintStream ps = new PrintStream(os);
     ...
     String output = os.toString("UTF8");
     #+end_src
     http://stackoverflow.com/questions/1760654/java-printstream-to-string
**** timestamp in java ?
     
     #+BEGIN_SRC sh
     import java.text.SimpleDateFormat;
     SimpleDateFormat sdf sdf = new SimpleDateFormat("yyyyMMdd-HHmmSS");
     String yyyyMMdd = sdf.format(new java.util.Date());

Reference: 
Update: the question by The Elite Gentleman is important. If you start with a String , then you should first parse it to obtain the date object from the above example:
Date date = new SimpleDateFormat("dd MMM yyyy").parse(dateString);

 
     #+END_SRC
*** Gradle
**** how to create a new project from scratch?
     #+begin_src sh
     gradle init --type basic
     #+end_src
*** Maven
**** simply download a jar with maven?

***** simple

     #+begin_src sh
     mvn dependency:get -Dartifact=org.springframework:spring-instrument:3.2.3.RELEASE
     #+end_src

     See: http://stackoverflow.com/questions/7110114/how-to-simply-download-a-jar-using-maven
***** specifying transitivity and repo

      #+begin_src sh
      mvn dependency:get -DremoteRepositories=https://repo.jenkins-ci.org/releases \
        -Dartifact=org.jenkins-ci.plugins:swarm-client:3.4                         \
        -Dtransitive=false
      #+end_src
**** generate a simple maven project?
     #+BEGIN_SRC sh
     # full list
     mvn archetype:generate
     # only with groupId org.apache.maven.archetypes:
     mvn archetype:generate -Dfilter=org.apache.maven.archetypes:
     # good for quick start:
     mvn archetype:generate -Dfilter=maven-archetype-quickstar
     # or
     mvn archetype:generate -Dfilter=maven-archetype-webapp
     # or
     mvn archetype:generate -Dfilter=maven-archetype-simple
     #+END_SRC
**** generate a simple webapp?
     #+BEGIN_SRC sh
     mvn archetype:generate                         \
       -DgroupId=com.mycompany.app                  \
       -DartifactId=my-app                          \
       -DarchetypeArtifactId=maven-archetype-webapp \
       -DinteractiveMode=false
     #+END_SRC
*** Clojure
**** Dev
***** Repl
****** Change the alias of a ns in a ns def (Alias <alias> already exists in namespace <ns>,etc)?
       If the ns is: =user.ns= and the alias is =alias=:
       #+BEGIN_SRC clj
       (ns-unalias (find-ns 'user.ns) 'alias)
       #+END_SRC
**** Lein
***** Show dependencies tree?
      #+BEGIN_SRC sh
      lein pom
      mvn dependency:tree -Dverbose=true 
      #+END_SRC
**** Language
***** Macros
****** Threading
******* how to use threading macros with functions with different argument position?
        #+BEGIN_SRC clojure
        ;; using -> and ->>
        (-> 4
          range                            
          (->> (partition 2                ))
          (->> (map       (partial into [])))
          (->> (into      {}               ))
          (get-in [2])
        )
        #> "3"
        ;; using as->
        (as-> 4 x 
          (range                       x) 
          (partition 2                 x)
          (map       (partial into []) x)
          (into      {}                x)
          (get-in x [2])
        )
        #> "3"
        #+END_SRC
***** Functions
****** Args
******* optional args with default values using keys?
        #+BEGIN_SRC clojure
        (defn hello [& {:keys [salutation name]
                        :or   {salutation "Hello" name "World"}}]
          (str salutation " " name))
        ;; => "#'fapi.jenkins.log-parse/hello"
        ;;
        (hello)
        ;; => "Hello World"
        (hello :name "John")
        ;; => "Hello John"
        (hello :name "John" :salutation "Hi")
        ;; => "Hi John"
        #+END_SRC
***** Var
****** symbol->var->value?
       #+BEGIN_SRC clojure
(def x :foo)
;; #> #'user/x
(resolve 'x)
;; #> #'user/x
(var-get (resolve 'x))
;; #> :foo
       #+END_SRC
******* in one go: 
        #+BEGIN_SRC clojure
        (->> 'x
             resolve
             var-get
        )
        #+END_SRC
******* or for conditional evaluation
        #+BEGIN_SRC clojure
        (if-let [v (resolve '*dev-mode*)]
          (if (var-get v)
            :dostuff))
        #+END_SRC
***** Destructuring
****** Nested destructuring with map and seq ?
        #+BEGIN_SRC clojure
        (def [s {:todo [:a :b]}])
        ;; #>
        (let [{[head & tail] :todo} s]
          [head tail])
        ;; #> [:a :b]
       #+END_SRC
*** Web Servers
**** Tomcat
***** how to configure tomcat so that it can be managed programatically ? 
      #+BEGIN_SRC sh
# add to TOMCAT_HOME/conf/tomcat-users.xml: 
<role rolename="manager-gui"/>
<role rolename="manager-script"/>
<role rolename="manager-jmx"/>
<role rolename="manager-status"/>
<role rolename="admin-gui"/>
<role rolename="admin-script"/>
<user username="tomcat" password="tomcat" roles="manager-gui,manager-script,manager-jmx,manager-status,admin-gui,admin-script"/>
# then:
curl -v -u tomcat:tomcat http://127.0.0.1:8080/manager/text/list
      #+END_SRC
***** tomcat rest api doc ?
      http://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#List_Currently_Deployed_Applications
      
** Node
*** Npm
**** Cli usage
***** how to install global packages without sudo?
      #+begin_src sh
      #Make a directory for global installations:
      mkdir ~/.npm-global
      #Configure npm to use the new directory path:
      npm config set prefix '~/.npm-global'
      #Open or create a ~/.profile file and add this line:
      export PATH=~/.npm-global/bin:$PATH >> ~/.bashrc
      #Back on the command line, update your system variables:
      source ~/.profile
      #+end_src
      https://docs.npmjs.com/getting-started/fixing-npm-permissions
***** upgrade npm to latest?
      #+begin_src sh
      npm install npm@latest -g
      #+end_src
***** color config in npm?
      Starting point:
      #+BEGIN_SRC sh
      npm config set color always
      #+END_SRC
***** npm list all config keys?
      #+BEGIN_SRC sh
      npm config ls -l
      #+END_SRC
      http://nipstr.com/
***** npm install a module from a git url ?
      notes, the repo:
      - must contains a package.json at it's root dir
      #+BEGIN_SRC sh
      npm install 'git+ssh://git@github.com:denlab/denlab-examples.git#repo/npm/npmLib' --save
      #+END_SRC
**** Searching
***** how to search npm packages (and filter by populariy, ...)?
      http://nipstr.com
*** how to read all lines from stdin in one go?

    #+BEGIN_SRC
    # install  module get-stdin
    npm i get-stdin
    # example
    cat > highlight.js <<EOF''
    const getStdin = require('get-stdin');

    getStdin().then(str => {
    console.log(str);
    });
    EOF
    # run
    echo foo | node hightlight.js
    #> foo
    #+END_SRC
** Regex
*** Sed
**** use a backreference without grouping?
  #+begin_src sh
  echo bar | sed 's/.*/=> & <=/'
  # => bar <=
  #+end_src
**** remove backslash EOL with sed?
  #+begin_src sh
  echo 'a
  b \
  c' | sed  '
  : again
  /\\$/ {
      N
      s/\\\n//
      t again
  }'
  # a
  # b c
  #+end_src
**** join lines of a files two by two? 
     #+BEGIN_SRC sh
seq 10  | sed 'N;s/\n/ /'
1 2
3 4
5 6
7 8
9 10
     #+END_SRC
**** add a line before the first line of a file?
     from: https://unix.stackexchange.com/questions/99350/how-to-insert-text-before-the-first-line-of-a-file
     #+BEGIN_SRC sh
     seq 3 > y
     cat y
     #> 1
     #> 2
     #> 3
     sed  -i '1i text' y
      #> text
     #> 1
     #> 2
     #> 3
     cat y
history | tail -3
history | tail -4
history | tail -10 

     
     #+END_SRC
*** Perl
**** Multiline search and replace?
     #+begin_src sh
     perl -pe 's/<search>/<replace>/'  < in.file > out.file
     #+end_src

** Python
*** Pip
**** How to install pip for python 3 ?
     - install:
       on ubuntu/debian:
       #+BEGIN_SRC sh
       aptitude install python3-pip
       #+END_SRC
     - invoke:
       #+BEGIN_SRC sh
       pip3 <cmd>
       #+END_SRC
**** pip completion on the command line?
     #+BEGIN_SRC sh
     pip completion --bash >> ~/.profile
     #+END_SRC
     or
     #+BEGIN_SRC sh
     eval "`pip completion --zsh`"
     #+END_SRC
     from: https://pip.pypa.io/en/stable/user_guide/?highlight=completion%20#command-completion
**** avoid pip warning when pip list in a script?
     #+BEGIN_SRC sh
     cat >> ~/.pip/pip.conf <<EOF
[list]
format=columns
EOF
     #+END_SRC
*** Json
**** Parse a json string?
     #+BEGIN_SRC sh
    python <<- EOF
import json
j = json.loads('{"one" : "1", "two" : "2", "three" : "3"}')

#print j['two']
EOF
     #+END_SRC
*** read from stdin?
    #+BEGIN_SRC python
   #!/usr/bin/env python
import fileinput

for line in fileinput.input():
  print line, # comma to avoid double printing newline
    #+END_SRC
** GnuMake
*** build in a diferent directory than the Makefile?
    from: https://stackoverflow.com/questions/37467969/how-to-change-current-directory-in-make
    ~Makefile~:
    #+BEGIN_SRC sh
srcs := main.c foo.c
blddir := bld
objs := $(addprefix $(blddir)/,$(srcs:.c=.o))
exe := $(blddir)/prog

.PHONY: all clean

all: $(exe)

$(blddir):
    mkdir -p $@

$(blddir)/%.o: %.c | $(blddir)
    $(CC) $(CFLAGS) $(CPPFLAGS) -c -o $@ $<

$(exe) : $(objs)
    $(CC) -o $@ $^ $(LDFLAGS) $(LDLIBS)

clean:
    rm -fr $(blddir)
    #+END_SRC
*** GnuMake language
**** print newline?
     ~Makefile~:
     #+BEGIN_SRC Makefile
    define \n


endef

$(info - newline: ${\n} has been inserted)
     #+END_SRC
**** print all variables?
     ~Makefile~:
     #+BEGIN_SRC sh
     info:
        @echo "V=$(foreach v, $(.VARIABLES), $(v):$($(v)))" | tr ' ' '\n' | jq -R '.' | jq -Ss '[ .[] | select(length > 0)  | [splits(":")]  | {key: .[0], value: .[1]}] | .[] | .key + ":" + .value' | jq -r '.' | column
     #+END_SRC
*** print all targets?
    #+BEGIN_SRC sh
    make -Rrnp  | egrep -v '^#|:= | = ' | grep ':'
    #+END_SRC
    or
    #+BEGIN_SRC sh
       @grep '^[^#[:space:]].*:' Makefile
    #+END_SRC
    or
    #+BEGIN_SRC sh
    make -prRn | egrep -v $'(^(#|\t)|=)' | egrep ':' 2> /dev/null | cut -d: -f1 | sort
    #+END_SRC
*** how do I fail the build if an env var is not defined for a particular target?
    #+BEGIN_SRC sh
check-env:
ifndef cmd
  $(error cmd is undefined)
endif
    #+END_SRC
*** how to use a multiline make var in a shell recipe?
    Export the make var, and use it in the recipe: 

    #+BEGIN_SRC sh 
make - <<< 'define multiline
- line1
- line2
- line3
endef
export multiline

run:
  @echo
  @echo "demoMultiLine: "
  @echo "$$multiline"
  @echo
'
#> 
#> demoMultiLine:
#> - line1
#> - line2
#> - line3
#> 
    #+END_SRC
*** selfDoc
**** how to extract all targets from a Makefile without a make command ? 
     +BEGIN_SRC sh
      egrep '^[^. :]+:' < proxy | sed -r -e 's/.*/  - &/' -e 's/://g']
     +END_SRC
** Lorem ipsum
   |      |        |                                         |
   |------+--------+-----------------------------------------|
   | json | online | ~curl https://registry.npmjs.com/lobar~ |

** Git

*** Submodules
**** submodule lifecycle mgmt

     | action                        | normal git managed file | for submodule          |
     |-------------------------------+-------------------------+------------------------|
     | revert file to repo's version | =git checkout --=       | =git submodule update= |
**** submodule: track latest?
     #+BEGIN_SRC sh
     # add submodule to track master branch
git submodule add -b master [URL to Git repo];

# update your submodule
git submodule update --remote
     #+END_SRC
**** how to deregister a submodule?
Something that has worked for me: 
#+BEGIN_SRC sh
moduleToRemove=modules/toRm
git rm -f $moduleToRemove
rm -rf .git/modules/$moduleToRemove
git clean -fd
git reset --hard
#+END_SRC
*** Tags / branches lifecycle mgmt

    | what   | action               | where        | git command                                                                                               |
    |--------+----------------------+--------------+-----------------------------------------------------------------------------------------------------------|
    | tag    | create               | local        | =git tag <tagName> <commit>=                                                                              |
    | tag    | fetch                |              | =git pull --tags=                                                                                         |
    | tag    | push                 |              | =git push origin <tag_name>=                                                                              |
    | tag    | delete               | local        | =git tag -d <tagName>=                                                                                    |
    | tag    | delete               | remote       | =git push --delete origin <tagName>=                                                                      |
    | branch | delete               |              | =git push origin --delete feature/example=                                                                |
    | branch | push && set upstream |              | =git push origin --set-upstream new-branch=                                                               |
    | branch | rename               | local/remote | =git branch -m $oldName $newName && git push origin :$oldName && git push --set-upstream origin $newName= |
    #+TBLFM: $4=git tag <tagName> <commit>
*** rm a big file from history?
 #+begin_src sh
 # given :
 # $ git lola --name-status
 # * f772d66 (HEAD, master) Login page
 | A     login.html
 # * cb14e Remove DVD-rip
 # | D     oops.iso
 # * ce36c98 Careless
 # | A     oops.iso
 # | A     other.html
 # * 5af4522 Admin page
 # | A     admin.html
 # * e738b63 Index
 #   A     index.html

 git rebase -i 5af4522

 # pick ce36c98 Careless
 # pick cb14e Remove DVD-rip
 # pick f772d66 Login page

 # e ce36c98 Careless
 # # pick cb14e Remove DVD-rip
 # pick f772d66 Login page

 $ git rm --cached oops.iso
 $ git commit --amend -C HEAD
 $ git rebase --continue


 #+end_src
*** list branch sorted by last commit date?
    #+begin_src sh
    git for-each-ref --sort=-committerdate refs/heads/
    #+end_src
*** grep history?
    #+begin_src sh
    set -- '<regex>'
    git grep "$@" $(git rev-list --all)
    #+end_src
*** essential git config? 
    #+BEGIN_SRC sh
         git config --global color.ui true                \
      && git config --global user.email "you@example.com" \
      && git config --global user.name "Your Name"
    #+END_SRC
*** config for colors?
    #+BEGIN_SRC sh
    git config --global color.ui true
    #+END_SRC
*** Git Lfs essentials?
#+begin_center sh
# Download
wget https://github.com/git-lfs/git-lfs/releases/download/v2.1.1/git-lfs-linux-amd64-2.1.1.tar.gz
tar xavf git-lfs-linux-amd64-2.1.1.tar.gz
cd xavf git-lfs-linux-amd64-2.1.1

# install
./install.sh
git lfs install

# Select the file types you'd like Git LFS to manage (or directly edit your .gitattributes). You can configure additional file extensions at anytime.

git lfs track "*.psd"

#Make sure .gitattributes is tracked

git add .gitattributes

#There is no step three. Just commit and push to GitHub as you normally would.

git add file.psd
git commit -m "Add design file"
git push origin master
#+end_center

from: https://git-lfs.github.com/

*** git & ssh
**** view ssh details?
***** git v2.3.0 or higher:
      #+begin_src sh
      GIT_SSH_COMMAND="ssh -vvv" git clone example
      #+end_src
**** how to specify the ssh key used by git?
     from: https://stackoverflow.com/questions/4565700/specify-private-ssh-key-to-use-when-executing-shell-command-with-or-without-ruby
     #+BEGIN_SRC sh
     ssh-agent bash -c 'ssh-add /somewhere/yourkey; git clone git@github.com:user/project.git'
     #+END_SRC

*** Diffing
**** show only the filnames that changed
     #+BEGIN_SRC sh
     git diff --stat --names-only HEAD^^..HEAD^
     #+END_SRC
** Jq
*** Finding
**** recursively find a value by key?
  #+begin_src sh
  echo '[{"a": 1}, {"b": 2}]' | jq '.. | .a? // empty'
  #=> 1
  #+end_src
**** recursively find all values of a given key?
  #+begin_src sh
  $ echo '{
    "a": {
      "b": 1,
      "c": {
        "d": {
          "key": 42
        },
        "e": 666
      }
    }
  }' | jq '..| .key?//empty'
  #=> [
  #=>   42
  #=> ]
  #+end_src
**** recursively find all path leading to a given key
  #+begin_src sh
  echo '{
    "a": {
      "b": 1,
      "c": {
        "d": {
          "key": 42
        },
        "e": 666
      }
    }
  }' | jq 'path (..| .key?//empty)'
  #=> [
  #=>   "a",
  #=>   "c",
  #=>   "d",
  #=>   "key"
  #=> ]
  #+end_src
**** recursively find all path leading to a certain value?
  #+begin_src sh

echo '{
    "a": {
      "b": 1,
      "c": {
        "d": {
          "key": 42
        },
        "e": 666
      }
    }
  }' | jq 'path(.. | select(. == 42))'
#> [
#>   "a",
#>   "c",
#>   "d",
#>   "key"
#> ]
  #+end_src



 | jq 'path (..| .key?//empty)'
  #=> [
  #=>   "a",
  #=>   "c",
  #=>   "d",
  #=>   "key"
  #=> ]
  #+end_src


**** get all the values of an object?
     #+begin_src sh
     jq -n '{"a": 1} | .[]'
     #=> 1
     #+end_src
**** does this array contains this element?
     #+BEGIN_SRC sh
     # - With contains:
     jq -n '[4,3,2,1] | contains([0])' #> false
     jq -n '[4,3,2,1] | contains([2])' #> true
     # - With inside:
     jq -n '[0] | inside([1,2])'       #> false
     #+END_SRC
*** Modifying
**** delete the key of an object?
  #+begin_src sh
  echo '{"k": 1}' | jq 'del(.k)'
  #+end_src
**** jq update ?
     #+begin_src sh
     jq -n '{foo:1, bar:10} | .foo |= . + 1 '
  #=> {
  #=>   "foo": 2,
  #=>   "bar": 10
  #=> }
     #+end_src
**** delete in nested datastructure?
     #+begin_src sh
     jq -n '{a:1, b:2, c:3} | del(.. | .a?//empty)'
     #+end_src
**** recursively delete all keys leading to pair numbers?
     Note: Probably could be written more concisely:
     #+begin_src sh
     jq -n '{a:1, b:2, c:3} \
       | del(.. | numbers | (if (. % 2) == 0 then . else empty end))'
     #+end_src
**** deep merge two nested datastructure?
     Use the ~*~ operator:
     #+BEGIN_SRC sh
jq -n '{a: 1, b: {ba: 10, bb: {bba: 42, bbb: 43} }} * {b: {bb: {bba: 49}}}'
#=> {
#=>   "a": 1,
#=>   "b": {
#=>     "ba": 10,
#=>     "bb": {
#=>       "bba": 49,
#=>       "bbb": 43
#=>     }
#=>   }
#=> }
     #+END_SRC
*** Strings / Regex
**** jq regexes cheet sheat ?
***** jq regex flags
      flag usage example:
      #+BEGIN_SRC sh
      jq -n '"FOO" | test("foo"; "i")'
      #+END_SRC
     | flags |                                                        |
     |-------+--------------------------------------------------------|
     | =g=   | Global match, find all not just the first              |
     | =i=   | case Insensitive                                       |
     | =m=   | Multi line match '.' will match newlines               |
     | =n=   | ignore empty matches                                   |
     | =p=   | both s and m mode enabled                              |
     | =s=   | Single line mode =('^' -> '\\A','$'->\\Z')=            |
     | =l=   | find Longest possible matches                          |
     | =x=   | eXtended regex format (ignore whitespace and comments) |
*****  jq regex functions
     | fn        | args1 | args2          | result if match                     | else    | jq program example                     |
     |-----------+-------+----------------+-------------------------------------+---------+----------------------------------------|
     | =test=    | =val= | =regex=        | =true=                              | =false= | =test("foo")=                          |
     | =test=    | =”=   | =regex; flags= | =true=                              | =false= | =test("foo")=                          |
     | =match=   | =”=   | =”=            | ={offset,length,string,captures}=   | =empty= | =match("(abc)+"; "g")=                 |
     | =capture= | =”=   | =”=            | =map of matches=                    | =empty= | =capture("(?<a>[a-z]+)-(?<n>[0-9]+)")= |
     | =scan=    | =”=   | =”=            | =stream of non overlapping matches= | =empty= |                                        |
     | =split=   | =”=   | =”=            | =<obsolete>=                        |         |                                        |
     | =splits=  | =”=   | =”=            | =stream matches=                    | =?=     | =splits("\\s+")=                       |

**** recursively find containers having a value that match a given regex?
     #+begin_src sh
     jq.help | jq '.. | select(.[]? | strings | test("transpose"))'
  #=> {
  #=>   "body": "\nTranspose a possibly jagged matrix (an array of arrays).\nRows are padded with nulls so the result is always rectangular.\n",
  #=>   "examples": [
  #=>     {
  #=>       "input": "[[1], [2,3]]",
  #=>       "program": "transpose",
  #=>       "output": [
  #=>         "[[1,2],[null,3]]"
  #=>       ]
  #=>     }
  #=>   ],
  #=>   "title": "`transpose`"
  #=> }
  #=> (...)
     #+end_src
**** convert string to upper case?
     #+begin_src sh
     jq -n '"abCD" | ascii_upcase'
     #=> "ABCD"
     #+end_src
**** jq regex replace?
     #+BEGIN_SRC sh
     sub(regex; string)
     jq -n '"foo bar" | sub(" "; "x")'
     #+END_SRC
**** substring?
     #+BEGIN_SRC sh
     echo foo | jq -R '.[0:1]'
"f"
     #+END_SRC
*** Quoting
**** given a known char I want to encode it in a json string for consumption by jq
 #+BEGIN_SRC sh
      char="'"
      #>
      echo "${char}" | jq -R explode
      #> [39]
      # Convert the decimal to hex
      echo "obase=16; 39" | bc
      #> 27
      # Encode the char in the string
      echo '"\\u0027"' | jq .
      #> "'"
      #+END_SRC
**** Single Quote
***** single quote as a integer (to escape it in bash)?
     #+BEGIN_SRC sh
     jq -n '([39] | implode) as $quote | $quote'
     #> "'"
     #+END_SRC
***** encode a single quote in a string for jq to decode?
      #+BEGIN_SRC sh
      # Encode the char in the string
      echo '"\\u0027"' | jq .
      #> "'"
      #+END_SRC
*** Interop
**** output a array for bash?
  #+begin_src sh
  echo '[1,2,3]' | jq '.|@tsv'
  #+end_src
*** Functional
**** reduce ?
  #+begin_src sh
  echo '[1,2,3]' \
  | jq 'reduce .[] as $item (0; . + $item)'
  #+end_src
**** zip two arrays into a map?
     #+BEGIN_SRC sh
jq -n '
  ["a","b"] as $a | [1,2] as $b
| [$a,$b]
| transpose | map({(.[0]): .[1]})
'
#> [
#>  {
#>    "a": 1
#>  },
#>  {
#>    "b": 2
#>  }
#>
     #+END_SRC

*** Convert
**** TODO element to array?
**** convert an array to a map?
    #+BEGIN_SRC sh
     echo '["a", "b", "c"]       ' \
     | jq '[{(.[]): null}] | add '
#=>  {
#=>   "a": null,
#=>   "b": null,
#=>   "c": null
#=>  }
    #+END_SRC
*** Dates and time
**** Get a human readable date of current time?
    #+BEGIN_SRC sh
    jq -n 'now | todate'
    #> "2017-09-12T18:35:01Z"
    #+END_SRC
*** Other
**** Undocumented debug options?
     #+BEGIN_SRC sh
     jq -n --debug-trace '1'
     #> 0000 TOP
     #> 0001 LOADK 1    null
     #> 0003 RET        1
     #> 1
     #> 0003 RET                <backtracking>
     jq -n --debug-dump-disasm '1'
     #> 0000 TOP
     #> 0001 LOADK 1
     #> 0003 RET
    #>  
    #> 1
    #+END_SRC

** Lua
*** Call external command and get stdout?
   #+BEGIN_SRC sh
 lua <<< '
cmd="seq 3"
f=assert(io.popen(cmd))
for line in f:lines() do
  print(line)
end'
#> 1
#> 2
#> 3
   #+END_SRC 
*** Call external command and get stdout and return code?
    it seems not straighforward to do.
    Seem to have to implement this by adding some way to get the rc from the command :-(

** Unicode
*** Handy emoticon ?
 | thumbs up  | 👍  |
 |            | 👏y |
 | speaker    | 🔇  |
 |            | 2🔈 |
 |            | 🔉  |
 |            | 🔊  |
 | warn       | ⚠  |
 | full block | █  |
 | cross      | ✘  |
 |            |    |
*** draft
see: https://en.wikipedia.org/wiki/List_of_Unicode_characters#Box_Drawing
 #+begin_src sh
 ┌┐
 └┘
 ┌┐┌┐
 └┘└┘
 ─┐
 ─┘
 ┌─┐
 └─┘
 ┌──┐
 │  │
 └──┘
 ┌──────┐
 │      │
 │      │
 └──────┘
 ╭──────╮
 │      │
 │      │
 ╰──────╯
 ╭─╮
 ╰─╯

 ┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌┐┌
 └┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘└┘

 #+end_src
*** use char by its code ?
*** unicode number in circle

 |  1 | ① | ❶ | ⬤ |
 |  2 | ② | ❷ |   |
 |  3 | ③ | ❸ |   |
 |  4 | ④ | ❹ |   |
 |  5 | ⑤ | ❺ |   |
 |  6 | ⑥ | ❻ |   |
 |  7 | ⑦ | ❼ |   |
 |  8 | ⑧ | ❽ |   |
 |  9 | ⑨ | ❾ |   |
 | 10 | ⑩ | ❿ |   |
 | 11 | ⑪ |   |   |
 | 12 | ⑫ |   |   |
 | 13 | ⑬ |   |   |
 | 14 | ⑭ |   |   |
 | 15 | ⑮ |   |   |
 | 16 | ⑯ |   |   |
 | 17 | ⑰ |   |   |
 | 18 | ⑱ |   |   |
 | 19 | ⑲ |   |   |
 | 20 | ⑳ |   |   |
*** lambda
    #+begin_src sh
    λ
    #+end_src
*** elipsis?
    #+begin_src sh
    …
    #+end_src
*** Checkmarks
**** check / uncheck marks?
     #+BEGIN_SRC sh
     🗹 DONE stuff done
     ☐ TODO stuff todo 
     #+END_SRC
     - alternative: 
       #+BEGIN_SRC sh
       ☑ 
       
       #+END_SRC
**** more check marks?

     from: https://en.wikipedia.org/wiki/X_mark

| Symbol | Unicode Code point (hex) | Name                                  |
| ☐      | U+2610                   | BALLOT BOX (checkbox)                 |
| ☒      | U+2612                   | BALLOT BOX WITH X (square with cross) |
| ✗      | U+2717                   | BALLOT X (cross)                      |
| ✘      | U+2718                   | HEAVY BALLOT X (bold cross)           |
|        |                          |                                       |
     #+BEGIN_SRC sh
     | Symbol | Unicode Code point (hex) | Name                                               |
     | ×      | U+00D7                   | MULTIPLICATION SIGN (z notation Cartesian product) |
     | ╳      | U+2573                   | BOX DRAWINGS LIGHT DIAGONAL CROSS                  |
     | ☓      | U+2613                   | SALTIRE (St Andrew's Cross)                        |
     | ✕      | U+2715                   | MULTIPLICATION X                                   |
     | ✖      | U+2716                   | HEAVY MULTIPLICATION X                             |
     | ❌     | U+274C                   | CROSS MARK                                         |
     | ❎     | U+274E                   | NEGATIVE SQUARED CROSS MARK                        |
     | ⨉      | U+2A09                   | N-ARY TIMES OPERATOR                               |
     | ⨯      | U+2A2F                   | VECTOR OR CROSS PRODUCT                            |
     | 🗙     | U+1F5D9                  | CANCELLATION X                                     |
     | 🗴     | U+1F5F4                  | BALLOT SCRIPT X                                    |
     | 🞩      | U+1F7A9                  | LIGHT SALTIRE                                      |
     |        |                          |                                                    |
     | ×	    | U+00D7	                 | MULTIPLICATION SIGN (z notation Cartesian product) |
     | ╳	    | U+2573	                 | BOX DRAWINGS LIGHT DIAGONAL CROSS                  |
     | ☓	    | U+2613	                 | SALTIRE (St Andrew's Cross)                        |
     | ✕	    | U+2715	                 | MULTIPLICATION X                                   |
     | ✖	    | U+2716	                 | HEAVY MULTIPLICATION X                             |
     | ❌	   | U+274C	                 | CROSS MARK                                         |
     | ❎	   | U+274E	                 | NEGATIVE SQUARED CROSS MARK                        |
     | ⨉	    | U+2A09	                 | N-ARY TIMES OPERATOR                               |
     | ⨯	    | U+2A2F	                 | VECTOR OR CROSS PRODUCT                            |
     | 🗙	   | U+1F5D9                  | 	CANCELLATION X                                   |
     | 🗴	   | U+1F5F4                  | 	BALLOT SCRIPT X                                  |
     | 🞩	    | U+1F7A9                  | 	LIGHT SALTIRE                                    |
     #+END_SRC

** Jira
*** Jira webapp keyboard shortcut cheat sheet
    | action                           | shortcut |
    |----------------------------------+----------|
    | send card to top of the board    | ~s + t~  |
    | send card to bottom of the board | ~s + b~  |
*** command line online help?
    #+BEGIN_SRC sh
    # repl:
    python
    # import the wanted module (eg: yaml)
    import yaml
    # help:
    help(yaml.load)
    #> Help on function load in module yaml:
    #> ...
    #+END_SRC
    - open the repl: ~python~
    - import the wanted module;
** CheatSheets
*** Clojure
| emacs | cider       | https://github.com/clojure-emacs/cider/blob/master/doc/using_the_repl.md |
|       | online help | ~C-h f RET cider-repl-mode~                                              |
** Doc
*** Markdown
**** Cheatsheet?
***** Links?
      From: https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#links
     #+BEGIN_SRC sh
     [I'm an inline-style link](https://www.google.com)

     [I'm an inline-style link with title](https://www.google.com "Google's Homepage")

     [I'm a reference-style link][Arbitrary case-insensitive reference text]

     [I'm a relative reference to a repository file](../blob/master/LICENSE)

     [You can use numbers for reference-style link definitions][1]

     Or leave it empty and use the [link text itself].

     URLs and URLs in angle brackets will automatically get turned into links. 
     http://www.example.com or <http://www.example.com> and sometimes 
     example.com (but not on Github, for example).

     Some text to show that the reference links can follow later.

     [arbitrary case-insensitive reference text]: https://www.mozilla.org
     [1]: http://slashdot.org
     [link text itself]: http://www.reddit.com
     #+END_SRC 
**** get values by their path (eg: ["a",1,"b"])?
     #+BEGIN_SRC sh
     jq -n '{a: {b: 1}} | getpath(["a","b"])'
     #> 1
     #+END_SRC
* Audio/Video
** Visualization
*** Online visualization of Wikipedia's graph?
 - http://tools.medialab.sciences-po.fr/seealsology/
 - http://seealso.org/
** Video editing
*** how to copy part of a video?
    #+BEGIN_SRC sh
    start=00:30:00
    duration=00:00:55
    in=originalfile
    out=newfile
    avconv -ss $start -t $duration -i $in -codec copy $out
    #+END_SRC
